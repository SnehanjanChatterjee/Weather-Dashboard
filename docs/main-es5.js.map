{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/daily-chart/daily-chart.component.ts","webpack:///src/app/Components/daily-chart/daily-chart.component.html","webpack:///src/app/Components/lhscontents/lhscontents.component.ts","webpack:///src/app/Components/lhscontents/lhscontents.component.html","webpack:///src/app/Components/main/main.component.ts","webpack:///src/app/Components/main/main.component.html","webpack:///src/app/Components/weather-widgets/weather-widgets.component.ts","webpack:///src/app/Components/weather-widgets/weather-widgets.component.html","webpack:///src/app/Constants/url-constants.ts","webpack:///src/app/Constants/weather-dashboard-constants.ts","webpack:///src/app/Services/weather-helper.ts","webpack:///src/app/Services/weather.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/appConfig.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DailyChartComponent","_weatherService","datePipe","xAxisData","seriesData1","seriesData2","minYAxisValue","maxYAxisValue","theme","getUnitType","subscribe","res","unitTypeValue","data","chartweatherData","daily","length","forEach","element","newDateTime","dt","timezone_offset","xAxisArrayValue","transform","push","temp","min","max","min_value","Math","max_value","floor","ceil","smoothLineChart","eChartOptions","title","show","text","cityName","tooltip","trigger","legend","type","xAxis","name","yAxis","series","smooth","selector","templateUrl","styleUrls","LHSContentsComponent","countryName","unitTypeFahrenheit","displayUnitType","iconurl","weatherDescrption","countryFlag","onUnitTypeChange","OneCallLocationWeatherData","current","weather","icon","currentDatetime","currentTemp","todayMinTemp","todayMaxTemp","locationWeatherData","description","sunriseTime","sunrise","sunsetTime","sunset","countries","getName","sys","country","select","toString","array","excludes","setUnitType","loadCurrentWeatherByCityName","pipe","loadOneAPICallDataByCurrentData","responseWeatherData","emit","responseWeather","errorMsg","handleSwitchSelection","MainComponent","spinner","toastr","showErrorDiv","showErrorPopup","errorMessage","Minutely","Hourly","htmlGeolocationMessage","toastMessageObject","closeButton","timeOut","extendedTimeOut","easing","easeTime","progressBar","progressAnimation","toastClass","positionClass","titleClass","messageClass","tapToDismiss","onActivateTick","preventDuplicates","iconClasses","getLocationByHTMLNavigator","setShowSpinner","currentWeatherData","window","setTimeout","singleCallWeatherData","showToastMessage","SUCCESS","responseWeatherError","ERROR","clear","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","getCurrentWeatherByGeoLocation","error","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","WARNING","loadCurrentWeatherByCoordinates","getCurrentWeatherByCityName","message","errorType","success","updateDataOnSwitchSelection","onKeyDown","WeatherWidgetsComponent","renderer","widgetNames","humidity","pressure","uvi","uv_index","cloudiness","wind","value","gaugeHumidityElement","gaugeHumidityFillElement","gaugeHumidityCoverElement","OneCallweather","setGaugeTurnValue","gaugeCloudElement","gaugeCloudFillElement","gaugeCloudCoverElement","clouds","gaugeUVIElement","gaugeUVIFillElement","gaugeUVICoverElement","gaugeWindElement","gaugeWindFillElement","gaugeWindCoverElement","wind_speed","currentWeather","fillElement","rounded","round","rotateBy","setStyle","nativeElement","APIUrl","IconUrl","Api","endpoints","box","find","oneCall","FlagURUL","FlagType","FlagSize","CELCIUS_UNIT","KELVIN_UNIT","FAHRENHEIT_UNIT","FAHRENHEIT","CELCIUS","OneCallExcludes","Current","Daily","Alerts","DAYS","day","ToastMessageType","INFO","IconClasses","info","warning","KelvinToCelsius","kelvin","CelsiusToKelvin","celsius","ConvertUnixToUTC","unixTime","Date","toISOString","slice","replace","LocalDateTime","timezoneOffset","currentDate","localTime","getTime","localOffset","getTimezoneOffset","utc","dateTime","LocalDateTimeByUnixTimestamp","ut","setUTCSeconds","TitleCase","str","toLowerCase","split","map","word","charAt","toUpperCase","join","WeatherService","_http","unitTypeSubject","showSpinner","Stored_API_Key","unit","getValue","url","get","errorHandler","excludesString","index","coord","lat","lon","unitType","next","asObservable","showSpinnerValue","console","providedIn","AppComponent","getShowSpinner","hide","AppModule","loadAnimation","forRoot","echarts","declarations","imports","providers","bootstrap","schemas","routes","path","redirectTo","pathMatch","component","routing","APIKey","openweather","apiKey","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { EChartOption } from 'echarts';\r\nimport { min } from 'rxjs/operators';\r\nimport { DAYS } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp, TitleCase } from 'src/app/Services/weather-helper';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-daily-chart',\r\n  templateUrl: './daily-chart.component.html',\r\n  styleUrls: ['./daily-chart.component.css']\r\n})\r\nexport class DailyChartComponent implements OnInit {\r\n\r\n  chartweatherData: OneAPICallModel;\r\n  eChartOptions: EChartOption;\r\n  xAxisData: string[] = [];\r\n  seriesData1: number[] = [];\r\n  seriesData2: number[] = [];\r\n  minYAxisValue: number = 0;\r\n  maxYAxisValue: number = 0;\r\n  unitTypeValue: string;\r\n  theme: string = 'light';\r\n\r\n  constructor(private _weatherService: WeatherService, private datePipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this._weatherService.getUnitType().subscribe((res: any) => {  \r\n      this.unitTypeValue = (res) ? '°F' : '°C';\r\n    })\r\n  }\r\n\r\n  @Input() cityName: string;\r\n\r\n  @Input()\r\n  set weatherData(data: OneAPICallModel) {\r\n    this.chartweatherData = data;\r\n    if (this.chartweatherData && this.chartweatherData.daily && this.chartweatherData.daily.length > 0) {\r\n      // console.log(\"In daily-chart \", this.chartweatherData);\r\n      this.xAxisData = [];\r\n      this.seriesData1 = [];\r\n      this.seriesData2 = [];\r\n      this.chartweatherData.daily.forEach(element => {\r\n        \r\n        let newDateTime = LocalDateTimeByUnixTimestamp(element.dt, this.chartweatherData.timezone_offset);\r\n        // let dayOfWeek = DAYS.filter(day => day.id === newDateTime.getDay())[0].day;\r\n        let xAxisArrayValue = this.datePipe.transform(newDateTime, 'dd/MM');\r\n        this.xAxisData.push(xAxisArrayValue);\r\n\r\n        this.seriesData1.push(element.temp.min);\r\n        this.seriesData2.push(element.temp.max);\r\n      });\r\n      \r\n      let min_value = Math.min(Math.min(...this.seriesData1), Math.min(...this.seriesData2));\r\n      let max_value = Math.max(Math.max(...this.seriesData1), Math.max(...this.seriesData2));\r\n      this.minYAxisValue = Math.floor(min_value / 10) * 10;\r\n      this.maxYAxisValue = Math.ceil(max_value / 10) * 10;\r\n\r\n      this.smoothLineChart();\r\n    }\r\n  }\r\n\r\n  smoothLineChart() {\r\n    this.eChartOptions = {\r\n      title: {\r\n        show: true,\r\n        text: TitleCase(this.cityName)\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      legend: {\r\n        show: true,\r\n        type: 'plain'\r\n      },\r\n      xAxis: {\r\n        name: 'Day',\r\n        type: 'category',\r\n        data: this.xAxisData\r\n      },\r\n      yAxis: {\r\n        name: 'Temperature (' + this.unitTypeValue + ')',\r\n        type: 'value',\r\n        min: this.minYAxisValue,\r\n        max: this.maxYAxisValue\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Min temperature',\r\n          data: this.seriesData1,\r\n          type: 'line',\r\n          smooth: true\r\n        },\r\n        {\r\n          name: 'Max temperature',\r\n          data: this.seriesData2,\r\n          type: 'line',\r\n          smooth: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"eChartOptions && chartweatherData && chartweatherData.daily && chartweatherData.daily.length > 0\" class=\"chartDiv\">\r\n    <div class=\"card chartCard mx-auto\">\r\n        <div class=\"card-body chartCardBody\">\r\n          <div echarts [options]=\"eChartOptions\" class=\"demo-chart chart\"></div>\r\n        </div>\r\n      </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { FlagSize, FlagType, FlagURUL, IconUrl } from 'src/app/Constants/url-constants';\r\nimport { CELCIUS, FAHRENHEIT } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { CurrentWeatherModel } from 'src/app/Models/weather.models';\r\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp } from 'src/app/Services/weather-helper';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\nimport * as i18nIsoCountries from 'i18n-iso-countries';\r\n\r\n@Component({\r\n  selector: 'app-lhscontents',\r\n  templateUrl: './lhscontents.component.html',\r\n  styleUrls: ['./lhscontents.component.css']\r\n})\r\nexport class LHSContentsComponent implements OnInit {\r\n\r\n  constructor(private _weatherService: WeatherService) { }\r\n\r\n  cityName: string = '';\r\n  countryName: string = '';\r\n  unitTypeFahrenheit: boolean = false;\r\n  displayUnitType: string = CELCIUS;\r\n  iconurl: string = '';\r\n  currentDatetime: Date;\r\n  currentTemp: number;\r\n  todayMinTemp: number;\r\n  todayMaxTemp: number;\r\n  weatherDescrption: string = '';\r\n  sunriseTime: Date;\r\n  sunsetTime: Date;\r\n  errorMsg: string;\r\n  countryFlag: string = '';\r\n\r\n  locationWeatherData: CurrentWeatherModel;\r\n  OneCallLocationWeatherData: OneAPICallModel;\r\n  excludes: any;\r\n\r\n  @Input()\r\n  set singleCallWeatherData(data: OneAPICallModel) {\r\n    this.OneCallLocationWeatherData = data;\r\n    if(this.OneCallLocationWeatherData) {\r\n\r\n      this.iconurl = IconUrl + this.OneCallLocationWeatherData.current.weather[0].icon + '@4x.png';\r\n\r\n      this.currentDatetime = LocalDateTime(this.OneCallLocationWeatherData.timezone_offset);\r\n\r\n      this.currentTemp = this.OneCallLocationWeatherData.current.temp;\r\n      // this.todayMinTemp = this.locationWeatherData.main.temp_min;\r\n      // this.todayMaxTemp = this.locationWeatherData.main.temp_max;\r\n      this.todayMinTemp = this.OneCallLocationWeatherData.daily[0].temp.min;\r\n      this.todayMaxTemp = this.OneCallLocationWeatherData.daily[0].temp.max;\r\n\r\n      this.weatherDescrption = this.locationWeatherData.weather[0].description;\r\n\r\n      this.sunriseTime = LocalDateTimeByUnixTimestamp(this.OneCallLocationWeatherData.current.sunrise, this.OneCallLocationWeatherData.timezone_offset);\r\n      this.sunsetTime = LocalDateTimeByUnixTimestamp(this.OneCallLocationWeatherData.current.sunset, this.OneCallLocationWeatherData.timezone_offset);\r\n\r\n      if (this.locationWeatherData && this.locationWeatherData.name) {\r\n        this.cityName = this.locationWeatherData.name;\r\n        // this.countryName = this.locationWeatherData.sys.country;\r\n        var countries = require(\"i18n-iso-countries\");\r\n        // console.log(countries.getNames(\"en\", {select: \"official\"}));\r\n        this.countryName = countries.getName(this.locationWeatherData.sys.country, \"en\", {select: \"official\"});\r\n        this.countryFlag = FlagURUL + this.locationWeatherData.sys.country.toString() + FlagType + FlagSize;\r\n      }\r\n      // console.log(\"IconUrl\", this.iconurl, \"\\n\", \"currentDatetime\", this.currentDatetime);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set weatherData(data: CurrentWeatherModel) {\r\n    this.locationWeatherData = data;\r\n    // if (this.locationWeatherData && this.locationWeatherData.name) {\r\n    //   this.cityName = this.locationWeatherData.name;\r\n    // }\r\n  }\r\n\r\n  @Input()\r\n  set excludesArray(array: any) {\r\n    this.excludes = array;\r\n    // console.log(\"In LHS excludes = \", this.excludes);\r\n  }\r\n\r\n  @Output() onUnitTypeChange: any = new EventEmitter<CurrentWeatherModel>();\r\n\r\n  ngOnInit(): void {\r\n    i18nIsoCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\r\n  }\r\n\r\n  handleSwitchSelection() {\r\n    this._weatherService.setUnitType(this.unitTypeFahrenheit);\r\n    if (this.OneCallLocationWeatherData && this.cityName) {\r\n      // this.cityName = this.OneCallLocationWeatherData.timezone.split('/')[1];\r\n      this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\r\n        switchMap(data => {\r\n          this.locationWeatherData = data;\r\n          // console.log(\"In LHS locationWeatherData = \\n\", data);\r\n          return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\r\n        }))\r\n        .subscribe(\r\n          responseWeatherData => {\r\n          this.OneCallLocationWeatherData = responseWeatherData;\r\n          this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\r\n          this.onUnitTypeChange.emit(this.OneCallLocationWeatherData);\r\n        },\r\n        responseWeather => {\r\n          this.errorMsg = responseWeather;\r\n          // console.log(responseWeather);\r\n        },\r\n        () => {\r\n          // console.log(\"handleSwitchSelection() Completed\");\r\n        }\r\n      );\r\n    } else {\r\n      this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\r\n    }\r\n  }\r\n\r\n}\r\n","<div id=\"mainLHSDiv\">\r\n    <div class=\"unitToggler\">\r\n        <div class=\"unitTogglerContentCel\">\r\n            <span>&#8451;</span>\r\n        </div>\r\n        <div class=\"unitTogglerContent\">\r\n            <mat-slide-toggle color=primary [(ngModel)]=\"unitTypeFahrenheit\" (change)=\"handleSwitchSelection()\"></mat-slide-toggle>\r\n        </div>\r\n        <div class=\"unitTogglerContentFah\">\r\n            <span>&#8457;</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"tempCityInfo\" *ngIf=\"OneCallLocationWeatherData\">\r\n        <div class=\"temp\">\r\n            <span class=\"tempValue\">{{currentTemp | number: '1.0-0'}}</span>\r\n            <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n            <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n        </div>\r\n        <div class=\"tempMinMax my-2\">\r\n            <div class=\"tempMin\">\r\n                <span class=\"tempMinValue\">Min: {{todayMinTemp | number: '1.0-0'}}</span>\r\n                <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n                <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n            </div>\r\n            <div class=\"tempMax\">\r\n                <span class=\"tempMaxValue\">Max: {{todayMaxTemp | number: '1.0-0'}}</span>\r\n                <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n                <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"sunRiseSunset my-2\">\r\n            <div class=\"sunRiseDiv\"><i class=\"fa fa-sun-o\" aria-hidden=\"true\"></i> Sunrise: {{sunriseTime | date:'h:mm a'}}</div>\r\n            <div class=\"sunSetDiv\"><i class=\"fa fa-moon-o\" aria-hidden=\"true\"></i> Sunset: {{sunsetTime | date:'h:mm a'}}</div>\r\n        </div>\r\n        <div class=\"weatherIconDiv\">\r\n            <img [src]=\"iconurl\" alt=\"Icon\" class=\"weatherIcon\">\r\n            <span class=\"weatherDesc\">{{weatherDescrption | titlecase}}</span>\r\n        </div>\r\n        <div class=\"cityInfo mx-1\">\r\n            <!-- <span><i class=\"fa fa-location-arrow\" aria-hidden=\"true\"></i>&nbsp;{{cityName}}, {{countryName}}</span> -->\r\n            <div><img [src]=\"countryFlag\" alt=\"Country Flag\"></div>\r\n            <span><lord-icon\r\n                src=\"https://cdn.lordicon.com/zzcjjxew.json\"\r\n                trigger=\"loop\"\r\n                colors=\"primary:#ffffff,secondary:#ffffff\"\r\n                style=\"width:50px;height:50px\">\r\n            </lord-icon>&nbsp;{{cityName}}, {{countryName}}</span>\r\n        </div>\r\n        <div class=\"timeInfo my-2 d-grid gap-2\">\r\n            <!-- <div class=\"timeInfoDate\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>&nbsp;{{currentDatetime | date:'EEEE, MMM d, y'}}</div>\r\n            <div class=\"timeInfoTime\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>&nbsp;{{currentDatetime | date:'h:mm a'}}</div> -->\r\n            <div class=\"timeInfoDate\">\r\n                <lord-icon\r\n                    src=\"https://cdn.lordicon.com/gmzxduhd.json\"\r\n                    trigger=\"loop\"\r\n                    colors=\"primary:#ffffff,secondary:#ffffff\"\r\n                    style=\"width:50px;height:50px\">\r\n                </lord-icon>&nbsp;{{currentDatetime | date:'EEEE, MMM d, y'}}\r\n            </div>\r\n            <div class=\"timeInfoTime\">\r\n                <lord-icon\r\n                    src=\"https://cdn.lordicon.com/kbtmbyzy.json\"\r\n                    trigger=\"loop\"\r\n                    colors=\"primary:#ffffff,secondary:#ffffff\"\r\n                    style=\"width:50px;height:50px\">\r\n                </lord-icon>&nbsp;{{currentDatetime | date:'h:mm a'}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentWeatherModel } from 'src/app/Models/weather.models';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { IconClasses, OneCallExcludes, ToastMessageType } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ToasterNotification } from 'src/app/Models/common.models';\r\nimport { TitleCase } from 'src/app/Services/weather-helper';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  cityName: string = '';\r\n  currentWeatherData: CurrentWeatherModel;\r\n  singleCallWeatherData: OneAPICallModel;\r\n  // pageLoading: boolean = false;\r\n  showErrorDiv: boolean = false;\r\n  showErrorPopup: boolean = false;\r\n  errorMessage: string = '';\r\n  excludes = [OneCallExcludes.Minutely, OneCallExcludes.Hourly];\r\n  latitude: number;\r\n  longitude: number;\r\n  htmlGeolocationMessage: string = '';\r\n  toastMessageObject: ToasterNotification = {\r\n    closeButton: true,\r\n    timeOut: 2000,\r\n    extendedTimeOut: 1000,\r\n    easing: 'ease-in',\r\n    easeTime: 300,\r\n    progressBar: true,\r\n    progressAnimation: 'increasing',\r\n    toastClass: 'ngx-toastr',\r\n    positionClass: 'toast-top-right',\r\n    titleClass:\t'toast-title',\r\n    messageClass: 'toast-message',\r\n    tapToDismiss: true,\r\n    onActivateTick: false,\r\n    preventDuplicates: true,\r\n    iconClasses: IconClasses\r\n  }\r\n\r\n  constructor(private _weatherService: WeatherService, private spinner: NgxSpinnerService, private toastr: ToastrService) { \r\n    if (this.cityName === '' || this.cityName === null) {\r\n      this.getLocationByHTMLNavigator();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getCurrentWeatherByCityName() {\r\n\r\n    this._weatherService.setShowSpinner(true);\r\n    \r\n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\r\n    switchMap(data => {\r\n      this.currentWeatherData = data;\r\n      // console.log(\"In main currentWeatherData = \\n\", this.currentWeatherData);\r\n      // console.log(\"In main excludes =\", this.excludes);\r\n      return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\r\n    }))\r\n    .subscribe(\r\n      responseWeatherData => {\r\n        window.setTimeout(() => {\r\n          this.singleCallWeatherData = responseWeatherData;\r\n          // console.log(\"In main.ts this.singleCallWeatherData = \\n\", this.singleCallWeatherData);\r\n          this._weatherService.setShowSpinner(false);\r\n          this.errorMessage = 'Showing weather data for ' + TitleCase(this.cityName);\r\n          this.showToastMessage(this.errorMessage, ToastMessageType.SUCCESS);\r\n        }, 2000);\r\n      },\r\n      responseWeatherError => {\r\n        // console.log(\"responseWeatherError = \", responseWeatherError);\r\n        this.singleCallWeatherData = null;\r\n        this._weatherService.setShowSpinner(false);\r\n        this.errorMessage = (this.cityName === '' || this.cityName === null) ? 'Please enter city name' : 'Incorrect city name';\r\n        this.showToastMessage(this.errorMessage, ToastMessageType.ERROR);\r\n      },\r\n      () => {\r\n        // console.log('getCurrentWeatherByCityName Completed');\r\n      }\r\n    );\r\n  }\r\n\r\n  updateDataOnSwitchSelection(data: any) {\r\n    this.singleCallWeatherData = data;\r\n  }\r\n\r\n  onKeyDown() {\r\n    // this.showErrorDiv = false;\r\n    this.toastr.clear();\r\n  }\r\n\r\n  getLocationByHTMLNavigator() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.latitude = position.coords.latitude;\r\n        this.longitude = position.coords.longitude;\r\n        if (this.latitude && this.longitude) {\r\n          this.getCurrentWeatherByGeoLocation();\r\n        }\r\n      }, (error) => {\r\n        switch (error.code) {\r\n          case error.PERMISSION_DENIED:\r\n            this.htmlGeolocationMessage = 'User denied the request for Geolocation.';\r\n            this.showToastMessage(this.htmlGeolocationMessage, ToastMessageType.ERROR);\r\n            break;\r\n          case error.POSITION_UNAVAILABLE:\r\n            this.htmlGeolocationMessage = 'Location information is unavailable.';\r\n            this.showToastMessage(this.htmlGeolocationMessage, ToastMessageType.ERROR);\r\n            break;\r\n          case error.TIMEOUT:\r\n            this.htmlGeolocationMessage = 'The request to get user location timed out.';\r\n            this.showToastMessage(this.htmlGeolocationMessage, ToastMessageType.ERROR);\r\n            break;\r\n        }\r\n      }\r\n    );\r\n    } else {\r\n      this.htmlGeolocationMessage = 'Geolocation is not supported by this browser.';\r\n      this.showToastMessage(this.htmlGeolocationMessage, ToastMessageType.WARNING);\r\n    }\r\n  }\r\n\r\n  getCurrentWeatherByGeoLocation() {\r\n    this._weatherService.setShowSpinner(true);\r\n    this._weatherService.loadCurrentWeatherByCoordinates(this.latitude, this.longitude).subscribe(\r\n      responseWeatherData => {\r\n        window.setTimeout(() => {\r\n          if (responseWeatherData) {\r\n            this.currentWeatherData = responseWeatherData;\r\n            this.cityName = this.currentWeatherData.name;\r\n            this._weatherService.setShowSpinner(false);\r\n            this.getCurrentWeatherByCityName();\r\n          }\r\n        }, 2000);\r\n      },\r\n      responseWeatherError => {\r\n        this.currentWeatherData = null;\r\n        this._weatherService.setShowSpinner(false);\r\n      },\r\n      () => {\r\n        // console.log('getCurrentWeatherByGeoLocation Completed');\r\n      }\r\n    );\r\n  }\r\n\r\n  showToastMessage(message: string, errorType: string) {\r\n    if (errorType === ToastMessageType.ERROR) {\r\n      this.toastr.error(message, ToastMessageType.ERROR, this.toastMessageObject);\r\n    } else if (errorType === ToastMessageType.SUCCESS){\r\n      this.toastr.success(message, ToastMessageType.SUCCESS, this.toastMessageObject);\r\n    } else if (errorType === ToastMessageType.WARNING){\r\n      this.toastr.success(message, ToastMessageType.WARNING, this.toastMessageObject);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid overflow-auto\" id=\"shellDiv\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" style=\"padding: 0;\">\r\n            <app-lhscontents [weatherData]=\"currentWeatherData\" [singleCallWeatherData]=\"singleCallWeatherData\"\r\n                [excludesArray]=\"excludes\" (onUnitTypeChange)=\"updateDataOnSwitchSelection($event)\">\r\n            </app-lhscontents>\r\n        </div>\r\n        <div class=\"col-md-9\" style=\"padding: 0;\">\r\n            <div id=\"mainDiv\" class=\"glassmorphDiv2\">\r\n                <div id=\"searchDiv\" [ngStyle]=\"{'height.px': showErrorDiv ? 150 : 100}\">\r\n                    <div class=\"input-group\" id=\"searchDivInput\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <!-- <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\" aria-hidden=\"true\" (click)=\"getCurrentWeatherByCityName()\"></i></span> -->\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <lord-icon src=\"https://cdn.lordicon.com/msoeawqm.json\" trigger=\"click\"\r\n                                    colors=\"primary:#121331,secondary:#08a88a\" stroke=\"100\"\r\n                                    (click)=\"getCurrentWeatherByCityName()\">\r\n                                </lord-icon>\r\n                            </span>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter City Name\" aria-label=\"Username\"\r\n                                aria-describedby=\"basic-addon1\" [(ngModel)]=\"cityName\"\r\n                                (keyup.enter)=\"getCurrentWeatherByCityName()\" (keydown)=\"onKeyDown()\">\r\n                            <span *ngIf=\"cityName\" class=\"input-group-text\" id=\"basic-addon1\" (click)=\"cityName=''\"><i\r\n                                    class=\"fa fa-times\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <app-daily-chart [weatherData]=\"singleCallWeatherData\" [cityName]=\"cityName\"></app-daily-chart>\r\n                <app-weather-widgets [currentWeatherData]=\"currentWeatherData\" [weatherData]=\"singleCallWeatherData\"></app-weather-widgets>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { CurrentWeatherModel } from 'src/app/Models/weather.models';\r\n\r\n@Component({\r\n  selector: 'app-weather-widgets',\r\n  templateUrl: './weather-widgets.component.html',\r\n  styleUrls: ['./weather-widgets.component.css']\r\n})\r\nexport class WeatherWidgetsComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private renderer: Renderer2) { }\r\n\r\n  OneCallweather: OneAPICallModel;\r\n  currentWeather: CurrentWeatherModel;\r\n\r\n  gaugeHumidityElement: ElementRef;\r\n  gaugeHumidityFillElement: ElementRef;\r\n  gaugeHumidityCoverElement: ElementRef;\r\n\r\n  gaugeCloudElement: ElementRef;\r\n  gaugeCloudFillElement: ElementRef;\r\n  gaugeCloudCoverElement: ElementRef;\r\n\r\n  gaugeUVIElement: ElementRef;\r\n  gaugeUVIFillElement: ElementRef;\r\n  gaugeUVICoverElement: ElementRef;\r\n\r\n  gaugeWindElement: ElementRef;\r\n  gaugeWindFillElement: ElementRef;\r\n  gaugeWindCoverElement: ElementRef;\r\n\r\n  widgetNames = {\r\n    humidity: 'Humidity',\r\n    pressure: 'Pressure',\r\n    uvi: 'UVI',\r\n    uv_index: 'UV Index',\r\n    cloudiness: 'Cloudiness',\r\n    wind: 'Wind'\r\n  }\r\n\r\n  @ViewChild('gaugeHumidity') set gaugeHumidityEl(value: ElementRef) {\r\n    this.gaugeHumidityElement = value;\r\n  };\r\n  @ViewChild('gaugeHumidityFill') set gaugeHumidityFillEl(value: ElementRef) {\r\n    this.gaugeHumidityFillElement = value;\r\n  };\r\n  @ViewChild('gaugeHumidityCover') set gaugeHumidityCoverEl(value: ElementRef) {\r\n    this.gaugeHumidityCoverElement = value;\r\n    if (this.OneCallweather && this.gaugeHumidityCoverElement) {\r\n      this.setGaugeTurnValue(this.OneCallweather.current.humidity * 0.01, this.gaugeHumidityFillElement);\r\n    }\r\n  };\r\n\r\n  @ViewChild('gaugeCloud') set gaugeCloudEl(value: ElementRef) {\r\n    this.gaugeCloudElement = value;\r\n  };\r\n  @ViewChild('gaugeCloudFill') set gaugeCloudFillEl(value: ElementRef) {\r\n    this.gaugeCloudFillElement = value;\r\n  };\r\n  @ViewChild('gaugeCloudCover') set gaugeCloudCoverEl(value: ElementRef) {\r\n    this.gaugeCloudCoverElement = value;\r\n    if (this.OneCallweather && this.gaugeCloudCoverElement) {\r\n      this.setGaugeTurnValue(this.OneCallweather.current.clouds * 0.01, this.gaugeCloudFillElement);\r\n    }\r\n  };\r\n\r\n  @ViewChild('gaugeUVI') set gaugeUVIEl(value: ElementRef) {\r\n    this.gaugeUVIElement = value;\r\n  };\r\n  @ViewChild('gaugeUVIFill') set gaugeUVIFillEl(value: ElementRef) {\r\n    this.gaugeUVIFillElement = value;\r\n  };\r\n  @ViewChild('gaugeUVICover') set gaugeUVICoverEl(value: ElementRef) {\r\n    this.gaugeUVICoverElement = value;\r\n    if (this.OneCallweather && this.gaugeUVICoverElement) {\r\n      this.setGaugeTurnValue(this.OneCallweather.current.uvi / 8, this.gaugeUVIFillElement);\r\n    }\r\n  };\r\n\r\n  @ViewChild('gaugeWind') set gaugeWindEl(value: ElementRef) {\r\n    this.gaugeWindElement = value;\r\n  };\r\n  @ViewChild('gaugeWindFill') set gaugeWindFillEl(value: ElementRef) {\r\n    this.gaugeWindFillElement = value;\r\n  };\r\n  @ViewChild('gaugeWindCover') set gaugeWindCoverEl(value: ElementRef) {\r\n    this.gaugeWindCoverElement = value;\r\n    if (this.OneCallweather && this.gaugeWindCoverElement) {\r\n      this.setGaugeTurnValue(this.OneCallweather.current.wind_speed * 0.01, this.gaugeWindFillElement);\r\n    }\r\n  };\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  @Input() set weatherData(weather: OneAPICallModel) {\r\n    this.OneCallweather = weather;\r\n    if (this.OneCallweather && this.gaugeCloudCoverElement && this.gaugeHumidityCoverElement && this.gaugeUVICoverElement && this.gaugeWindCoverElement) {\r\n      this.setGaugeTurnValue(this.OneCallweather.current.humidity * 0.01, this.gaugeHumidityFillElement);\r\n      this.setGaugeTurnValue(this.OneCallweather.current.uvi / 8, this.gaugeUVIFillElement);\r\n      this.setGaugeTurnValue(this.OneCallweather.current.clouds * 0.01, this.gaugeCloudFillElement);\r\n      this.setGaugeTurnValue(this.OneCallweather.current.wind_speed * 0.01, this.gaugeWindFillElement);\r\n    }\r\n  }\r\n\r\n  @Input() set currentWeatherData(weather: CurrentWeatherModel) {\r\n    this.currentWeather = weather;\r\n  }\r\n\r\n  setGaugeTurnValue(value: number, fillElement: ElementRef) {\r\n    const rounded = Math.round(value * 10) / 10;\r\n    let rotateBy = (rounded / 2);\r\n\r\n    if (value > 0 && rounded === 0) {\r\n      rotateBy = 0.1;\r\n    }\r\n\r\n    if (value <= 0 || value > 1) {\r\n      return;\r\n    }\r\n    this.renderer.setStyle(fillElement.nativeElement, 'transform', 'rotate(' + (rotateBy) + 'turn)');\r\n    // this.renderer.createText(this.gaugeCoverElement.nativeElement, value);\r\n\r\n    // console.log(\"value = \", value);\r\n    // console.log(\"rounded = \", rounded);\r\n    // console.log(\"rotateBy = \", rotateBy);\r\n    // console.log(\"element.nativeElement = \", fillElement.nativeElement);\r\n    // console.log(\"------------------\");\r\n  }\r\n\r\n  setThresholdColour(value: number) {\r\n    if (value <= 0) {\r\n      return '#b4c0be';\r\n    } else if (value > 0 && value <= 20) {\r\n      return 'red';\r\n    } else if (value > 20 && value <= 60) {\r\n      return 'orange';\r\n    } else if (value > 60 && value <= 90) {\r\n      return '#eded02';\r\n    } else if (value > 90) {\r\n      return 'green';\r\n    }\r\n  }\r\n\r\n  setUVIThresholdColour(value: number) {\r\n    if (value <= 0) {\r\n      return '#b4c0be';\r\n    } else if (value > 0 && value <= 2) { // You can safely enjoy being outside!\r\n      return 'green';\r\n    } else if (value > 2 && value <= 7) { // Seek shade during midday hours! Slip on a shirt, slop on sunscreen and slap on hat!\r\n      return '#eded02';\r\n    } else if (value > 7) { // Avoid being outside during midday hours! Make sure you seek shade! Shirt, sunscreen and hat are a must!\r\n      return 'red';\r\n    }\r\n  }\r\n\r\n  setWindThresholdColour(value: number) {\r\n    if (value <= 1) {\r\n      return '#b4c0be';\r\n    } else if (value > 1 && value <= 3) {\r\n      return '#50eded';\r\n    } else if (value > 3 && value <= 7) {\r\n      return '#14d7d7';\r\n    } else if (value > 7 && value <= 12) {\r\n      return '#00cc00';\r\n    } else if (value > 12 && value <= 18) {\r\n      return '#00ff00';\r\n    } else if (value > 18 && value <= 24) {\r\n      return '#99ff33';\r\n    } else if (value > 24 && value <= 31) {\r\n      return '#ccff33';\r\n    } else if (value > 31 && value <= 38) {\r\n      return '#ffff00';\r\n    } else if (value > 38 && value <= 46) {\r\n      return '#ffcc00';\r\n    } else if (value > 46 && value <= 54) {\r\n      return '#ff9933';\r\n    } else if (value > 54 && value <= 63) {\r\n      return '#ff9933';\r\n    } else if (value > 63 && value <= 72) {\r\n      return '#ff5050';\r\n    } else if (value > 72) {\r\n      return '#ff0000';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<div *ngIf=\"OneCallweather && OneCallweather != undefined\" class=\"widgetsMainDiv\">\r\n    <div class=\"card widgetsCard humidity\">\r\n        <div class=\"card-body widgetsCardBody\">\r\n            <div class=\"widgetTitle\">\r\n                <span>{{widgetNames.humidity}}</span>\r\n            </div>\r\n            <div class=\"widgetIconDiv\">\r\n                <img [src]=\"'../../../assets/images/' + widgetNames.humidity + '.gif'\" [alt]=\"widgetNames.humidity + 'Icon'\">\r\n            </div>\r\n            <div class=\"widgetGaugeMeter\">\r\n                <div #gaugeHumidity class=\"gauge\">\r\n                    <div #gaugeHumidityBody class=\"gauge__body\">\r\n                        <div #gaugeHumidityFill class=\"gauge__fill\" [ngStyle]=\"{background: setThresholdColour(OneCallweather.current.humidity)}\"></div>\r\n                        <div #gaugeHumidityCover class=\"gauge__cover\">{{OneCallweather.current.humidity}}%</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"gaugeThresholdsDiv\">\r\n                    <span class=\"start\">0</span>\r\n                    <span class=\"end\">100</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div class=\"card widgetsCard pressure\">\r\n        <div class=\"card-body widgetsCardBody\">\r\n            <div class=\"widgetTitle\">\r\n                <span>{{widgetNames.pressure}}</span>\r\n            </div>\r\n            <div class=\"widgetIconDiv\">\r\n                <img [src]=\"'../../../assets/images/' + widgetNames.pressure + '.gif'\" [alt]=\"widgetNames.pressure + 'Icon'\">\r\n            </div>\r\n            <div class=\"widgetGaugeMeter\">\r\n                <span>{{OneCallweather.current.pressure}} hPa</span>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"card widgetsCard uvi\">\r\n        <div class=\"card-body widgetsCardBody\">\r\n            <div class=\"widgetTitle\">\r\n                <span>{{widgetNames.uv_index}}</span>\r\n            </div>\r\n            <div class=\"widgetIconDiv\">\r\n                <img [src]=\"'../../../assets/images/' + widgetNames.uvi + '.gif'\" [alt]=\"widgetNames.uvi + 'Icon'\">\r\n            </div>\r\n            <div class=\"widgetGaugeMeter\">\r\n                <div #gaugeUVI class=\"gauge\">\r\n                    <div #gaugeUVIBody class=\"gauge__body\">\r\n                        <div #gaugeUVIFill class=\"gauge__fill\" [ngStyle]=\"{background: setUVIThresholdColour(OneCallweather.current.uvi)}\"></div>\r\n                        <div #gaugeUVICover class=\"gauge__cover\">{{OneCallweather.current.uvi}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"gaugeThresholdsDiv\">\r\n                    <span class=\"start\">0</span>\r\n                    <span class=\"end\">8+</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card widgetsCard clouds\">\r\n        <div class=\"card-body widgetsCardBody\">\r\n            <div class=\"widgetTitle\">\r\n                <span>{{widgetNames.cloudiness}}</span>\r\n            </div>\r\n            <div class=\"widgetIconDiv\">\r\n                <img [src]=\"'../../../assets/images/' + widgetNames.cloudiness + '.gif'\" [alt]=\"widgetNames.cloudiness + 'Icon'\">\r\n            </div>\r\n            <div class=\"widgetGaugeMeter\">\r\n                <div #gaugeCloud class=\"gauge\">\r\n                    <div #gaugeCloudBody class=\"gauge__body\">\r\n                        <div #gaugeCloudFill class=\"gauge__fill\" [ngStyle]=\"{background: setThresholdColour(OneCallweather.current.clouds)}\"></div>\r\n                        <div #gaugeCloudCover class=\"gauge__cover\">{{OneCallweather.current.clouds}}%</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"gaugeThresholdsDiv\">\r\n                    <span class=\"start\">0</span>\r\n                    <span class=\"end\">100</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card widgetsCard wind\">\r\n        <div class=\"card-body widgetsCardBody\">\r\n            <div class=\"widgetTitle\">\r\n                <span>{{widgetNames.wind}}</span>\r\n            </div>\r\n            <div class=\"widgetIconDiv\">\r\n                <img [src]=\"'../../../assets/images/' + widgetNames.wind + '.gif'\" [alt]=\"widgetNames.wind + 'Icon'\">\r\n            </div>\r\n            <div class=\"widgetGaugeMeter\">\r\n                <div #gaugeWind class=\"gauge\">\r\n                    <div #gaugeWindBody class=\"gauge__body\">\r\n                        <div #gaugeWindFill class=\"gauge__fill\" [ngStyle]=\"{background: setWindThresholdColour(OneCallweather.current.wind_speed)}\"></div>\r\n                        <div #gaugeWindCover class=\"gauge__cover\">{{OneCallweather.current.wind_speed}}<span class=\"widgetUnitDiv\">m/hr</span></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"gaugeThresholdsDiv\">\r\n                    <span class=\"start\">0</span>\r\n                    <span class=\"end\">73+</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export const APIUrl = 'https://api.openweathermap.org/data/2.5/';\r\nexport const IconUrl = 'http://openweathermap.org/img/wn/';\r\n\r\nexport const Api = {\r\n    endpoints: {\r\n        weather: '/weather',\r\n        box: '/box/city',\r\n        find: '/find',\r\n        oneCall: '/onecall',\r\n    }\r\n}\r\n\r\n// https://www.countryflags.io/\r\nexport const FlagURUL = 'https://www.countryflags.io/';\r\nexport const FlagType = \"/shiny\";\r\nexport const FlagSize = \"/64.png\";","import { Days } from \"../Models/common.models\";\r\n\r\nexport const CELCIUS_UNIT = 'metric'; // Celsius unit \r\nexport const KELVIN_UNIT = 'standard'; // Kelvin unit (default)\r\nexport const FAHRENHEIT_UNIT = 'imperial'; // Kelvin unit (default)\r\n\r\nexport const FAHRENHEIT = 'fahrenheit';\r\nexport const CELCIUS = 'celcius';\r\n\r\nexport const OneCallExcludes = {\r\n    Current: 'current',\r\n    Minutely: 'minutely',\r\n    Hourly: 'hourly',\r\n    Daily: 'daily',\r\n    Alerts: 'alerts',\r\n};\r\n\r\nexport const DAYS: Days[] = [\r\n    { id: 0, day: 'Sunday' },\r\n    { id: 1, day: 'Monday' },\r\n    { id: 2, day: 'Tuesday' },\r\n    { id: 3, day: 'Wednesday' },\r\n    { id: 4, day: 'Thursday' },\r\n    { id: 5, day: 'Friday' },\r\n    { id: 6, day: 'Saturday' }\r\n];\r\n\r\nexport const ToastMessageType = {\r\n    ERROR: 'Error',\r\n    WARNING: 'Warning',\r\n    INFO: 'Info',\r\n    SUCCESS: 'Success'\r\n};\r\n\r\nexport const IconClasses = {\r\n    error: 'toast-error',\r\n    info: 'toast-info',\r\n    success: 'toast-success',\r\n    warning: 'toast-warning',\r\n};","export function KelvinToCelsius(kelvin: number): number {\r\n    return kelvin - 273.15;\r\n}\r\nexport function CelsiusToKelvin(celsius: number): number {\r\n    return celsius + 273.15;\r\n}\r\n\r\nexport function ConvertUnixToUTC(unixTime: number): string {\r\n    // console.log(\"In helper file\", new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC'));\r\n    // return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC');\r\n    return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ');\r\n}\r\n\r\nexport function LocalDateTime(timezoneOffset: number) {\r\n    const currentDate = new Date();\r\n    const localTime = currentDate.getTime();\r\n    const localOffset = currentDate.getTimezoneOffset() * 60000;\r\n    const utc = localTime + localOffset;\r\n    var dateTime = utc + (1000 * timezoneOffset);\r\n    // console.log(\"In helper file LocalDateTime()\", new Date(dateTime));\r\n    return new Date(dateTime);\r\n}\r\n\r\nexport function LocalDateTimeByUnixTimestamp(ut: number, timezoneOffset: number) {\r\n\r\n    var dateTime = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n    dateTime.setUTCSeconds(ut);\r\n    // console.log(\"dateTime = \", dateTime);\r\n    return dateTime;\r\n}\r\n\r\nexport function TitleCase(str: string) {\r\n    return str.toLowerCase().split(' ').map(function(word) {\r\n      return (word.charAt(0).toUpperCase() + word.slice(1));\r\n    }).join(' ');\r\n  }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { CurrentWeatherModel } from '../Models/weather.models';\r\nimport { CELCIUS_UNIT, FAHRENHEIT_UNIT, OneCallExcludes } from '../Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from '../Models/OneAPICallModel.models';\r\nimport { Api, APIUrl } from '../Constants/url-constants';\r\nimport { APIKey } from '../appConfig';\r\n// import { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  private unitTypeSubject = new BehaviorSubject<boolean>(false);\r\n  // private showSpinner = new BehaviorSubject<boolean>(false);\r\n  private showSpinner = new Subject<boolean>();\r\n  // private Stored_API_Key = environment.OPENWEATHER_API_KEY;\r\n  private Stored_API_Key = APIKey;\r\n\r\n  loadCurrentWeatherByCityName(cityName: string): Observable<CurrentWeatherModel> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    const url = APIUrl + Api.endpoints.weather + '?q=' + cityName + '&appid=' + this.Stored_API_Key + '&units=' + unit;\r\n    return this._http.get<CurrentWeatherModel>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n  \r\n  loadCurrentWeatherByCoordinates(latitude: number, longitude: number): Observable<CurrentWeatherModel> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    const url = APIUrl + Api.endpoints.weather + '?lat=' + latitude + '&lon=' + longitude + '&appid=' + this.Stored_API_Key + '&units=' + unit;\r\n    return this._http.get<CurrentWeatherModel>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n  \r\n  loadOneAPICallDataByCurrentData(currentWeatherData: CurrentWeatherModel, excludes: any): Observable<OneAPICallModel> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    let excludesString = '';\r\n    excludes.forEach((value, index) => {\r\n      excludesString += value;\r\n      if (index !== excludes.length - 1) {\r\n        excludesString += ',';\r\n      }\r\n    });\r\n    // console.log(excludesString);\r\n\r\n    let url = '';\r\n    if (excludesString && excludes.length > 0) {\r\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \r\n      '&exclude=' + excludesString + '&appid=' + this.Stored_API_Key + '&units=' + unit;\r\n    } else {\r\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \r\n      '&appid=' + this.Stored_API_Key + '&units=' + unit;\r\n    }\r\n    return this._http.get<OneAPICallModel>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n\r\n  setUnitType(unitType: boolean) {\r\n    this.unitTypeSubject.next(unitType);\r\n  }\r\n\r\n  getUnitType(): Observable<boolean> {\r\n    return this.unitTypeSubject.asObservable();\r\n  }\r\n  \r\n  setShowSpinner(showSpinnerValue: boolean) {\r\n    this.showSpinner.next(showSpinnerValue);\r\n  }\r\n\r\n  getShowSpinner(): Observable<boolean> {\r\n    return this.showSpinner.asObservable();\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    console.error(error);\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { WeatherService } from './Services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Weather-Dashboard';\r\n\r\n  constructor(private _weatherService: WeatherService, private spinner: NgxSpinnerService) { \r\n    this._weatherService.getShowSpinner().subscribe( (showSpinner) => {\r\n      if (showSpinner) {\r\n        this.spinner.show();\r\n      } else {\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"line-scale-party\" [fullScreen]=\"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './Components/main/main.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LHSContentsComponent } from './Components/lhscontents/lhscontents.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { routing } from './app.routing';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DailyChartComponent } from './Components/daily-chart/daily-chart.component';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { DatePipe } from '@angular/common';\r\nimport { defineLordIconElement } from 'lord-icon-element';\r\nimport lottie from 'lottie-web';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { WeatherWidgetsComponent } from './Components/weather-widgets/weather-widgets.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    LHSContentsComponent,\r\n    DailyChartComponent,\r\n    WeatherWidgetsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    routing,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    NgxEchartsModule.forRoot({\r\n      /**\r\n       * This will import all modules from echarts.\r\n       * If you only need custom modules,\r\n       * please refer to [Custom Build] section.\r\n       */\r\n      echarts: () => import('echarts'), // or import('./path-to-my-custom-echarts')\r\n    }),\r\n    NgxSpinnerModule,\r\n    ToastrModule.forRoot() // ToastrModule added\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule {\r\n  constructor() {\r\n    defineLordIconElement(lottie.loadAnimation);\r\n  }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MainComponent } from './Components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n    { path: 'dashboard', component: MainComponent},\r\n    { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","export const APIKey = '0dd5542d536e51ce47540ed11c8f0ebc';\r\n\r\nexport const openweather = {\r\n    openweather: {\r\n        apiKey: '0dd5542d536e51ce47540ed11c8f0ebc',\r\n    }\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}