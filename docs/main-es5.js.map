{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/daily-chart/daily-chart.component.ts","webpack:///src/app/Components/daily-chart/daily-chart.component.html","webpack:///src/app/Components/lhscontents/lhscontents.component.ts","webpack:///src/app/Components/lhscontents/lhscontents.component.html","webpack:///src/app/Components/main/main.component.ts","webpack:///src/app/Components/main/main.component.html","webpack:///src/app/Constants/weather-dashboard-constants.ts","webpack:///src/app/Services/weather-helper.ts","webpack:///src/app/Services/weather.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/appConfig.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DailyChartComponent","_weatherService","xAxisData","seriesData1","seriesData2","minYAxisValue","maxYAxisValue","theme","getUnitType","subscribe","res","unitTypeValue","data","chartweatherData","daily","length","forEach","element","newDateTime","dt","timezone_offset","dayOfWeek","filter","day","getDay","push","temp","min","max","min_value1","Math","min_value2","min_value","max_value1","max_value2","max_value","floor","ceil","smoothLineChart","eChartOptions","title","show","text","cityName","toLocaleUpperCase","tooltip","trigger","legend","type","xAxis","name","yAxis","series","smooth","selector","templateUrl","styleUrls","LHSContentsComponent","countryName","unitTypeFahrenheit","displayUnitType","iconurl","onUnitTypeChange","OneCallLocationWeatherData","current","weather","icon","currentDatetime","currentTemp","locationWeatherData","sys","country","array","excludes","setUnitType","loadCurrentWeatherByCityName","pipe","loadOneAPICallDataByCurrentData","responseWeatherData","emit","responseWeather","errorMsg","handleSwitchSelection","MainComponent","pageLoading","showErrorDiv","errorMessage","Minutely","Hourly","currentWeatherData","window","setTimeout","oneCallWeatherData","responseWeatherError","updateDataOnSwitchSelection","getCurrentWeatherByCityName","onKeyDown","CELCIUS_UNIT","KELVIN_UNIT","FAHRENHEIT_UNIT","FAHRENHEIT","CELCIUS","OneCallExcludes","Current","Daily","Alerts","DAYS","KelvinToCelsius","kelvin","CelsiusToKelvin","celsius","ConvertUnixToUTC","unixTime","Date","toISOString","slice","replace","LocalDateTime","timezoneOffset","currentDate","localTime","getTime","localOffset","getTimezoneOffset","utc","dateTime","console","log","LocalDateTimeByUnixTimestamp","ut","setUTCSeconds","WeatherService","_http","unitTypeSubject","unit","getValue","url","endpoints","get","errorHandler","excludesString","value","index","oneCall","coord","lat","lon","unitType","next","asObservable","error","message","providedIn","AppComponent","AppModule","forRoot","echarts","declarations","imports","providers","bootstrap","routes","path","redirectTo","pathMatch","component","routing","APIUrl","IconUrl","APIKey","Api","box","find","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Input, OnInit } from '@angular/core';\nimport { EChartOption } from 'echarts';\nimport { min } from 'rxjs/operators';\nimport { DAYS } from 'src/app/Constants/weather-dashboard-constants';\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp } from 'src/app/Services/weather-helper';\nimport { WeatherService } from 'src/app/Services/weather.service';\n\n@Component({\n  selector: 'app-daily-chart',\n  templateUrl: './daily-chart.component.html',\n  styleUrls: ['./daily-chart.component.css']\n})\nexport class DailyChartComponent implements OnInit {\n\n  chartweatherData: OneAPICallModel;\n  eChartOptions: EChartOption;\n  xAxisData: string[] = [];\n  seriesData1: number[] = [];\n  seriesData2: number[] = [];\n  minYAxisValue: number = 0;\n  maxYAxisValue: number = 0;\n  unitTypeValue: string;\n  theme: string = 'light';\n\n  constructor(private _weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n    this._weatherService.getUnitType().subscribe((res: any) => {  \n      this.unitTypeValue = (res) ? '°F' : '°C';\n    })\n  }\n\n  @Input() cityName: string;\n\n  @Input()\n  set weatherData(data: OneAPICallModel) {\n    this.chartweatherData = data;\n    if (this.chartweatherData && this.chartweatherData.daily && this.chartweatherData.daily.length > 0) {\n      // console.log(\"In daily-chart \", this.chartweatherData);\n      this.xAxisData = [];\n      this.seriesData1 = [];\n      this.seriesData2 = [];\n      this.chartweatherData.daily.forEach(element => {\n        \n        let newDateTime = LocalDateTimeByUnixTimestamp(element.dt, this.chartweatherData.timezone_offset);\n        let dayOfWeek = DAYS.filter(day => day.id === newDateTime.getDay())[0].day;\n        this.xAxisData.push(dayOfWeek);\n\n        this.seriesData1.push(element.temp.min);\n        this.seriesData2.push(element.temp.max);\n      });\n      \n      let min_value1 = Math.min(...this.seriesData1);\n      let min_value2 = Math.min(...this.seriesData2);\n      let min_value = Math.min(min_value1, min_value2);\n      let max_value1 = Math.max(...this.seriesData1);\n      let max_value2 = Math.max(...this.seriesData2);\n      let max_value = Math.max(max_value1, max_value2);\n      this.minYAxisValue = Math.floor(min_value);\n      this.maxYAxisValue = Math.ceil(max_value);\n\n      this.smoothLineChart();\n    }\n  }\n\n  smoothLineChart() {\n    this.eChartOptions = {\n      title: {\n        show: true,\n        text: this.cityName.toLocaleUpperCase()\n      },\n      tooltip: {\n        trigger: 'axis',\n      },\n      legend: {\n        show: true,\n        type: 'plain'\n      },\n      xAxis: {\n        name: 'Day',\n        type: 'category',\n        data: this.xAxisData\n      },\n      yAxis: {\n        name: 'Temperature (' + this.unitTypeValue + ')',\n        type: 'value',\n        min: this.minYAxisValue,\n        max: this.maxYAxisValue\n      },\n      series: [\n        {\n          name: 'Min temperature',\n          data: this.seriesData1,\n          type: 'line',\n          smooth: true\n        },\n        {\n          name: 'Max temperature',\n          data: this.seriesData2,\n          type: 'line',\n          smooth: true\n        }\n      ]\n    };\n  }\n\n}\n","<div *ngIf=\"eChartOptions\" class=\"chartDiv\">\n    <div class=\"card chartCard\">\n        <div class=\"card-body chartCardBody\">\n          <div echarts [options]=\"eChartOptions\" class=\"demo-chart\" style=\"height: 350px !important;\"></div>\n        </div>\n      </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { IconUrl } from 'src/app/appConfig';\nimport { CELCIUS, FAHRENHEIT } from 'src/app/Constants/weather-dashboard-constants';\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\nimport { CurrentWeather } from 'src/app/Models/weather.models';\nimport { LocalDateTime } from 'src/app/Services/weather-helper';\nimport { WeatherService } from 'src/app/Services/weather.service';\n\n@Component({\n  selector: 'app-lhscontents',\n  templateUrl: './lhscontents.component.html',\n  styleUrls: ['./lhscontents.component.css']\n})\nexport class LHSContentsComponent implements OnInit {\n\n  constructor(private _weatherService: WeatherService) { }\n\n  cityName: string = '';\n  countryName: string = '';\n  unitTypeFahrenheit: boolean = false;\n  displayUnitType: string = CELCIUS;\n  iconurl: string = '';\n  currentDatetime: Date;\n  currentTemp: number;\n  errorMsg: string;\n\n  locationWeatherData: CurrentWeather;\n  OneCallLocationWeatherData: OneAPICallModel;\n  excludes: any;\n\n  @Input()\n  set oneCallWeatherData(data: OneAPICallModel) {\n    this.OneCallLocationWeatherData = data;\n    if(this.OneCallLocationWeatherData) {\n\n      this.iconurl = IconUrl + this.OneCallLocationWeatherData.current.weather[0].icon + '@4x.png';\n\n      this.currentDatetime = LocalDateTime(this.OneCallLocationWeatherData.timezone_offset);\n\n      this.currentTemp = this.OneCallLocationWeatherData.current.temp;\n\n      if (this.locationWeatherData && this.locationWeatherData.name) {\n        this.cityName = this.locationWeatherData.name;\n        this.countryName = this.locationWeatherData.sys.country;\n      }\n      // console.log(\"IconUrl\", this.iconurl, \"\\n\", \"currentDatetime\", this.currentDatetime);\n    }\n  }\n\n  @Input()\n  set weatherData(data: CurrentWeather) {\n    this.locationWeatherData = data;\n    // if (this.locationWeatherData && this.locationWeatherData.name) {\n    //   this.cityName = this.locationWeatherData.name;\n    // }\n  }\n\n  @Input()\n  set excludesArray(array: any) {\n    this.excludes = array;\n    // console.log(\"In LHS excludes = \", this.excludes);\n  }\n\n  @Output() onUnitTypeChange: any = new EventEmitter<CurrentWeather>();\n\n  ngOnInit(): void {\n  }\n\n  handleSwitchSelection() {\n    this._weatherService.setUnitType(this.unitTypeFahrenheit);\n    if (this.OneCallLocationWeatherData && this.cityName) {\n      // this.cityName = this.OneCallLocationWeatherData.timezone.split('/')[1];\n      this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\n        switchMap(data => {\n          this.locationWeatherData = data;\n          // console.log(\"In LHS locationWeatherData = \\n\", data);\n          return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\n        }))\n        .subscribe(\n          responseWeatherData => {\n          this.OneCallLocationWeatherData = responseWeatherData;\n          this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\n          this.onUnitTypeChange.emit(this.OneCallLocationWeatherData);\n        },\n        responseWeather => {\n          this.errorMsg = responseWeather;\n          // console.log(responseWeather);\n        },\n        () => {\n          // console.log(\"handleSwitchSelection() Completed\");\n        }\n      );\n    } else {\n      this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\n    }\n  }\n\n}\n","<div id=\"mainLHSDiv\">\n    <div class=\"unitToggler\">\n        <div class=\"unitTogglerContentCel\">\n            <span>&#8451;</span>\n        </div>\n        <div class=\"unitTogglerContent\">\n            <mat-slide-toggle color=primary [(ngModel)]=\"unitTypeFahrenheit\" (change)=\"handleSwitchSelection()\"></mat-slide-toggle>\n        </div>\n        <div class=\"unitTogglerContentFah\">\n            <span>&#8457;</span>\n        </div>\n    </div>\n    <div class=\"tempInfo\" *ngIf=\"OneCallLocationWeatherData\">\n        <!-- Celcius -->\n        <div class=\"temp\" *ngIf=\"displayUnitType === 'celcius'\">\n            {{currentTemp | number: '1.0-0'}}\n            <span>&#8451;</span>\n        </div>\n        <!-- Fahrenheit -->\n        <div class=\"temp\" *ngIf=\"displayUnitType === 'fahrenheit'\">\n            {{currentTemp | number: '1.0-0'}}\n            <span>&#8457;</span>\n        </div>\n        <div class=\"weatherIconDiv\">\n            <img [src]=\"iconurl\" alt=\"Icon\" class=\"weatherIcon\">\n        </div>\n        <div *ngIf=\"OneCallLocationWeatherData\" class=\"cityInfo\">\n            {{cityName}}, {{countryName}}\n            <!-- {{locationWeatherData.name}}, {{locationWeatherData.sys.country}} -->\n            <!-- {{OneCallLocationWeatherData.timezone}} -->\n        </div>\n        <div *ngIf=\"OneCallLocationWeatherData\" class=\"timeInfo\">\n            {{currentDatetime | date:'MMM d, y, h:mm a'}} &nbsp;\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeather } from 'src/app/Models/weather.models';\nimport { WeatherService } from 'src/app/Services/weather.service';\nimport { switchMap } from 'rxjs/operators';\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\nimport { OneCallExcludes } from 'src/app/Constants/weather-dashboard-constants';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  cityName: string = '';\n  currentWeatherData: CurrentWeather;\n  oneCallWeatherData: OneAPICallModel;\n  pageLoading: boolean = false;\n  showErrorDiv: boolean = false;\n  errorMessage: string = '';\n  excludes = [OneCallExcludes.Minutely, OneCallExcludes.Hourly];\n\n  constructor(private _weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n  }\n\n  getCurrentWeatherByCityName() {\n\n    this.pageLoading = true;\n    \n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\n    switchMap(data => {\n      this.currentWeatherData = data;\n      // console.log(\"In main currentWeatherData = \\n\", this.currentWeatherData);\n      // console.log(\"In main excludes =\", this.excludes);\n      return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\n    }))\n    .subscribe(\n      responseWeatherData => {\n        window.setTimeout(() => {\n          this.oneCallWeatherData = responseWeatherData;\n          // console.log(\"In main.ts this.oneCallWeatherData = \\n\", this.oneCallWeatherData);\n          this.pageLoading = false;\n          this.showErrorDiv = false;\n        }, 2000);\n      },\n      responseWeatherError => {\n        // console.log(\"responseWeatherError = \", responseWeatherError);\n        this.oneCallWeatherData = null;\n        // this.errorMessage = responseWeatherError;\n        this.errorMessage = (this.cityName === '' || this.cityName === null) ? 'Please enter city name' : 'Incorrect city name';\n        this.showErrorDiv = true;\n        this.pageLoading = false;\n      },\n      () => {\n        // console.log('getCurrentWeatherByCityName Completed');\n      }\n    );\n  }\n\n  updateDataOnSwitchSelection(data: any) {\n    this.oneCallWeatherData = data;\n  }\n\n  onKeyDown() {\n    this.showErrorDiv = false;\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-3\" style=\"padding: 0;\">\n            <app-lhscontents [weatherData]=\"currentWeatherData\" [oneCallWeatherData]=\"oneCallWeatherData\" [excludesArray]=\"excludes\"\n            (onUnitTypeChange)=\"updateDataOnSwitchSelection($event)\"></app-lhscontents>\n        </div>\n        <div class=\"col-md-9\" style=\"padding: 0;\">\n            <div [ngClass]=\"{loader:pageLoading}\"></div>\n            <div id=\"mainDiv\">\n                <div id=\"searchDiv\" [ngStyle]=\"{'height.px': showErrorDiv ? 150 : 100}\">\n                    <div class=\"input-group\" id=\"searchDivInput\">\n                        <div class=\"input-group mb-3\">\n                            <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\" aria-hidden=\"true\" (click)=\"getCurrentWeatherByCityName()\"></i></span>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter City Name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" \n                            [(ngModel)]=\"cityName\" (keyup.enter)=\"getCurrentWeatherByCityName()\" (keydown)=\"onKeyDown()\">\n                            <span *ngIf=\"cityName\" class=\"input-group-text\" id=\"basic-addon1\" (click)=\"cityName=''\"><i class=\"fa fa-times\"></i></span>\n                        </div>\n                    </div>\n                    <div *ngIf=\"showErrorDiv\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                        <strong>{{errorMessage}}</strong>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\" (click)=\"showErrorDiv=false\"></button>\n                    </div>\n                </div>\n                <app-daily-chart [weatherData]=\"oneCallWeatherData\" [cityName]=\"cityName\"></app-daily-chart>\n                <!-- <div class=\"widgetsDiv\">\n                    \n                </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n","import { Days } from \"../Models/common.models\";\r\n\r\nexport const CELCIUS_UNIT = 'metric'; // Celsius unit \r\nexport const KELVIN_UNIT = 'standard'; // Kelvin unit (default)\r\nexport const FAHRENHEIT_UNIT = 'imperial'; // Kelvin unit (default)\r\n\r\nexport const FAHRENHEIT = 'fahrenheit';\r\nexport const CELCIUS = 'celcius';\r\n\r\nexport const OneCallExcludes = {\r\n    Current: 'current',\r\n    Minutely: 'minutely',\r\n    Hourly: 'hourly',\r\n    Daily: 'daily',\r\n    Alerts: 'alerts',\r\n};\r\n\r\nexport const DAYS: Days[] = [\r\n    { id: 0, day: 'Sunday' },\r\n    { id: 1, day: 'Monday' },\r\n    { id: 2, day: 'Tuesday' },\r\n    { id: 3, day: 'Wednesday' },\r\n    { id: 4, day: 'Thursday' },\r\n    { id: 5, day: 'Friday' },\r\n    { id: 6, day: 'Saturday' }\r\n];","export function KelvinToCelsius(kelvin: number): number {\r\n    return kelvin - 273.15;\r\n}\r\nexport function CelsiusToKelvin(celsius: number): number {\r\n    return celsius + 273.15;\r\n}\r\n\r\nexport function ConvertUnixToUTC(unixTime: number): string {\r\n    // console.log(\"In helper file\", new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC'));\r\n    // return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC');\r\n    return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ');\r\n}\r\n\r\nexport function LocalDateTime(timezoneOffset: number) {\r\n    const currentDate = new Date();\r\n    const localTime = currentDate.getTime();\r\n    const localOffset = currentDate.getTimezoneOffset() * 60000;\r\n    const utc = localTime + localOffset;\r\n    var dateTime = utc + (1000 * timezoneOffset);\r\n    console.log(\"In helper file LocalDateTime()\", new Date(dateTime));\r\n    return new Date(dateTime);\r\n}\r\n\r\nexport function LocalDateTimeByUnixTimestamp(ut: number, timezoneOffset: number) {\r\n\r\n    var dateTime = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n    dateTime.setUTCSeconds(ut);\r\n    console.log(\"dateTime = \", dateTime);\r\n    return dateTime;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { CurrentWeather } from '../Models/weather.models';\nimport { Api, APIKey, APIUrl } from '../appConfig';\nimport { CELCIUS_UNIT, FAHRENHEIT_UNIT, OneCallExcludes } from '../Constants/weather-dashboard-constants';\nimport { OneAPICallModel } from '../Models/OneAPICallModel.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private _http: HttpClient) { }\n\n  private unitTypeSubject = new BehaviorSubject<boolean>(false);\n\n  loadCurrentWeatherByCityName(cityName: string): Observable<CurrentWeather> {\n\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\n    \n    const url = APIUrl + Api.endpoints.weather + '?q=' + cityName + '&appid=' + APIKey + '&units=' + unit;\n    return this._http.get<CurrentWeather>(url).pipe(catchError(this.errorHandler));\n    \n  }\n  \n  loadOneAPICallDataByCurrentData(currentWeatherData: CurrentWeather, excludes: any): Observable<OneAPICallModel> {\n\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\n    \n    let excludesString = '';\n    excludes.forEach((value, index) => {\n      excludesString += value;\n      if (index !== excludes.length - 1) {\n        excludesString += ',';\n      }\n    });\n    // console.log(excludesString);\n\n    let url = '';\n    if (excludesString && excludes.length > 0) {\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \n      '&exclude=' + excludesString + '&appid=' + APIKey + '&units=' + unit;\n    } else {\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \n      '&appid=' + APIKey + '&units=' + unit;\n    }\n    return this._http.get<OneAPICallModel>(url).pipe(catchError(this.errorHandler));\n    \n  }\n\n  setUnitType(unitType: boolean) {\n    this.unitTypeSubject.next(unitType);\n  }\n\n  getUnitType(): Observable<boolean> {\n    return this.unitTypeSubject.asObservable();\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    console.error(error);\n    return throwError(error.message || \"Server Error\");\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather-Dashboard';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './Components/main/main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LHSContentsComponent } from './Components/lhscontents/lhscontents.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { routing } from './app.routing';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DailyChartComponent } from './Components/daily-chart/daily-chart.component';\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    LHSContentsComponent,\n    DailyChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    routing,\n    MatSlideToggleModule,\n    FormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    NgxEchartsModule.forRoot({\n      /**\n       * This will import all modules from echarts.\n       * If you only need custom modules,\n       * please refer to [Custom Build] section.\n       */\n      echarts: () => import('echarts'), // or import('./path-to-my-custom-echarts')\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MainComponent } from './Components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n    { path: 'dashboard', component: MainComponent},\r\n    { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","export const APIUrl = 'https://api.openweathermap.org/data/2.5/';\r\nexport const IconUrl = 'http://openweathermap.org/img/wn/';\r\nexport const APIKey = '0dd5542d536e51ce47540ed11c8f0ebc';\r\n\r\nexport const Api = {\r\n    endpoints: {\r\n        weather: '/weather',\r\n        box: '/box/city',\r\n        find: '/find',\r\n        oneCall: '/onecall',\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}