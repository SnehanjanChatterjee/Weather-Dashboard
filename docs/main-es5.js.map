{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/daily-chart/daily-chart.component.ts","webpack:///src/app/Components/daily-chart/daily-chart.component.html","webpack:///src/app/Components/lhscontents/lhscontents.component.ts","webpack:///src/app/Components/lhscontents/lhscontents.component.html","webpack:///src/app/Components/main/main.component.ts","webpack:///src/app/Components/main/main.component.html","webpack:///src/app/Constants/weather-dashboard-constants.ts","webpack:///src/app/Services/weather-helper.ts","webpack:///src/app/Services/weather.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/appConfig.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DailyChartComponent","_weatherService","datePipe","xAxisData","seriesData1","seriesData2","minYAxisValue","maxYAxisValue","theme","getUnitType","subscribe","res","unitTypeValue","data","chartweatherData","daily","length","forEach","element","newDateTime","dt","timezone_offset","xAxisArrayValue","transform","push","temp","min","max","min_value","Math","max_value","floor","ceil","smoothLineChart","eChartOptions","title","show","text","cityName","tooltip","trigger","legend","type","xAxis","name","yAxis","series","smooth","selector","templateUrl","styleUrls","LHSContentsComponent","countryName","unitTypeFahrenheit","displayUnitType","iconurl","weatherDescrption","onUnitTypeChange","OneCallLocationWeatherData","current","weather","icon","currentDatetime","currentTemp","todayMinTemp","todayMaxTemp","locationWeatherData","description","sunriseTime","sunrise","sunsetTime","sunset","countries","getName","sys","country","select","array","excludes","setUnitType","loadCurrentWeatherByCityName","pipe","loadOneAPICallDataByCurrentData","responseWeatherData","emit","responseWeather","errorMsg","handleSwitchSelection","MainComponent","pageLoading","showErrorDiv","errorMessage","Minutely","Hourly","currentWeatherData","window","setTimeout","oneCallWeatherData","responseWeatherError","updateDataOnSwitchSelection","getCurrentWeatherByCityName","onKeyDown","CELCIUS_UNIT","KELVIN_UNIT","FAHRENHEIT_UNIT","FAHRENHEIT","CELCIUS","OneCallExcludes","Current","Daily","Alerts","DAYS","day","KelvinToCelsius","kelvin","CelsiusToKelvin","celsius","ConvertUnixToUTC","unixTime","Date","toISOString","slice","replace","LocalDateTime","timezoneOffset","currentDate","localTime","getTime","localOffset","getTimezoneOffset","utc","dateTime","LocalDateTimeByUnixTimestamp","ut","setUTCSeconds","TitleCase","str","toLowerCase","split","map","word","charAt","toUpperCase","join","WeatherService","_http","unitTypeSubject","unit","getValue","url","endpoints","get","errorHandler","excludesString","value","index","oneCall","coord","lat","lon","unitType","next","asObservable","error","console","message","providedIn","AppComponent","AppModule","forRoot","echarts","declarations","imports","providers","bootstrap","routes","path","redirectTo","pathMatch","component","routing","APIUrl","IconUrl","APIKey","Api","box","find","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { EChartOption } from 'echarts';\r\nimport { min } from 'rxjs/operators';\r\nimport { DAYS } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp, TitleCase } from 'src/app/Services/weather-helper';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-daily-chart',\r\n  templateUrl: './daily-chart.component.html',\r\n  styleUrls: ['./daily-chart.component.css']\r\n})\r\nexport class DailyChartComponent implements OnInit {\r\n\r\n  chartweatherData: OneAPICallModel;\r\n  eChartOptions: EChartOption;\r\n  xAxisData: string[] = [];\r\n  seriesData1: number[] = [];\r\n  seriesData2: number[] = [];\r\n  minYAxisValue: number = 0;\r\n  maxYAxisValue: number = 0;\r\n  unitTypeValue: string;\r\n  theme: string = 'light';\r\n\r\n  constructor(private _weatherService: WeatherService, private datePipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this._weatherService.getUnitType().subscribe((res: any) => {  \r\n      this.unitTypeValue = (res) ? '°F' : '°C';\r\n    })\r\n  }\r\n\r\n  @Input() cityName: string;\r\n\r\n  @Input()\r\n  set weatherData(data: OneAPICallModel) {\r\n    this.chartweatherData = data;\r\n    if (this.chartweatherData && this.chartweatherData.daily && this.chartweatherData.daily.length > 0) {\r\n      // console.log(\"In daily-chart \", this.chartweatherData);\r\n      this.xAxisData = [];\r\n      this.seriesData1 = [];\r\n      this.seriesData2 = [];\r\n      this.chartweatherData.daily.forEach(element => {\r\n        \r\n        let newDateTime = LocalDateTimeByUnixTimestamp(element.dt, this.chartweatherData.timezone_offset);\r\n        // let dayOfWeek = DAYS.filter(day => day.id === newDateTime.getDay())[0].day;\r\n        let xAxisArrayValue = this.datePipe.transform(newDateTime, 'dd/MM');\r\n        this.xAxisData.push(xAxisArrayValue);\r\n\r\n        this.seriesData1.push(element.temp.min);\r\n        this.seriesData2.push(element.temp.max);\r\n      });\r\n      \r\n      let min_value = Math.min(Math.min(...this.seriesData1), Math.min(...this.seriesData2));\r\n      let max_value = Math.max(Math.max(...this.seriesData1), Math.max(...this.seriesData2));\r\n      this.minYAxisValue = Math.floor(min_value / 10) * 10;\r\n      this.maxYAxisValue = Math.ceil(max_value / 10) * 10;\r\n\r\n      this.smoothLineChart();\r\n    }\r\n  }\r\n\r\n  smoothLineChart() {\r\n    this.eChartOptions = {\r\n      title: {\r\n        show: true,\r\n        text: TitleCase(this.cityName)\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      legend: {\r\n        show: true,\r\n        type: 'plain'\r\n      },\r\n      xAxis: {\r\n        name: 'Day',\r\n        type: 'category',\r\n        data: this.xAxisData\r\n      },\r\n      yAxis: {\r\n        name: 'Temperature (' + this.unitTypeValue + ')',\r\n        type: 'value',\r\n        min: this.minYAxisValue,\r\n        max: this.maxYAxisValue\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Min temperature',\r\n          data: this.seriesData1,\r\n          type: 'line',\r\n          smooth: true\r\n        },\r\n        {\r\n          name: 'Max temperature',\r\n          data: this.seriesData2,\r\n          type: 'line',\r\n          smooth: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"eChartOptions && chartweatherData && chartweatherData.daily && chartweatherData.daily.length > 0\" class=\"chartDiv\">\r\n    <div class=\"card chartCard mx-auto\">\r\n        <div class=\"card-body chartCardBody\">\r\n          <div echarts [options]=\"eChartOptions\" class=\"demo-chart\" style=\"height: 350px !important;\"></div>\r\n        </div>\r\n      </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { IconUrl } from 'src/app/appConfig';\r\nimport { CELCIUS, FAHRENHEIT } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { CurrentWeather } from 'src/app/Models/weather.models';\r\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp } from 'src/app/Services/weather-helper';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\nimport * as i18nIsoCountries from 'i18n-iso-countries';\r\n\r\n@Component({\r\n  selector: 'app-lhscontents',\r\n  templateUrl: './lhscontents.component.html',\r\n  styleUrls: ['./lhscontents.component.css']\r\n})\r\nexport class LHSContentsComponent implements OnInit {\r\n\r\n  constructor(private _weatherService: WeatherService) { }\r\n\r\n  cityName: string = '';\r\n  countryName: string = '';\r\n  unitTypeFahrenheit: boolean = false;\r\n  displayUnitType: string = CELCIUS;\r\n  iconurl: string = '';\r\n  currentDatetime: Date;\r\n  currentTemp: number;\r\n  todayMinTemp: number;\r\n  todayMaxTemp: number;\r\n  weatherDescrption: string = '';\r\n  sunriseTime: Date;\r\n  sunsetTime: Date;\r\n  errorMsg: string;\r\n\r\n  locationWeatherData: CurrentWeather;\r\n  OneCallLocationWeatherData: OneAPICallModel;\r\n  excludes: any;\r\n\r\n  @Input()\r\n  set oneCallWeatherData(data: OneAPICallModel) {\r\n    this.OneCallLocationWeatherData = data;\r\n    if(this.OneCallLocationWeatherData) {\r\n\r\n      this.iconurl = IconUrl + this.OneCallLocationWeatherData.current.weather[0].icon + '@4x.png';\r\n\r\n      this.currentDatetime = LocalDateTime(this.OneCallLocationWeatherData.timezone_offset);\r\n\r\n      this.currentTemp = this.OneCallLocationWeatherData.current.temp;\r\n      // this.todayMinTemp = this.locationWeatherData.main.temp_min;\r\n      // this.todayMaxTemp = this.locationWeatherData.main.temp_max;\r\n      this.todayMinTemp = this.OneCallLocationWeatherData.daily[0].temp.min;\r\n      this.todayMaxTemp = this.OneCallLocationWeatherData.daily[0].temp.max;\r\n\r\n      this.weatherDescrption = this.locationWeatherData.weather[0].description;\r\n\r\n      this.sunriseTime = LocalDateTimeByUnixTimestamp(this.OneCallLocationWeatherData.current.sunrise, this.OneCallLocationWeatherData.timezone_offset);\r\n      this.sunsetTime = LocalDateTimeByUnixTimestamp(this.OneCallLocationWeatherData.current.sunset, this.OneCallLocationWeatherData.timezone_offset);\r\n\r\n      if (this.locationWeatherData && this.locationWeatherData.name) {\r\n        this.cityName = this.locationWeatherData.name;\r\n        // this.countryName = this.locationWeatherData.sys.country;\r\n        var countries = require(\"i18n-iso-countries\");\r\n        // console.log(countries.getNames(\"en\", {select: \"official\"}));\r\n        this.countryName = countries.getName(this.locationWeatherData.sys.country, \"en\", {select: \"official\"});\r\n      }\r\n      // console.log(\"IconUrl\", this.iconurl, \"\\n\", \"currentDatetime\", this.currentDatetime);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set weatherData(data: CurrentWeather) {\r\n    this.locationWeatherData = data;\r\n    // if (this.locationWeatherData && this.locationWeatherData.name) {\r\n    //   this.cityName = this.locationWeatherData.name;\r\n    // }\r\n  }\r\n\r\n  @Input()\r\n  set excludesArray(array: any) {\r\n    this.excludes = array;\r\n    // console.log(\"In LHS excludes = \", this.excludes);\r\n  }\r\n\r\n  @Output() onUnitTypeChange: any = new EventEmitter<CurrentWeather>();\r\n\r\n  ngOnInit(): void {\r\n    i18nIsoCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\r\n  }\r\n\r\n  handleSwitchSelection() {\r\n    this._weatherService.setUnitType(this.unitTypeFahrenheit);\r\n    if (this.OneCallLocationWeatherData && this.cityName) {\r\n      // this.cityName = this.OneCallLocationWeatherData.timezone.split('/')[1];\r\n      this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\r\n        switchMap(data => {\r\n          this.locationWeatherData = data;\r\n          // console.log(\"In LHS locationWeatherData = \\n\", data);\r\n          return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\r\n        }))\r\n        .subscribe(\r\n          responseWeatherData => {\r\n          this.OneCallLocationWeatherData = responseWeatherData;\r\n          this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\r\n          this.onUnitTypeChange.emit(this.OneCallLocationWeatherData);\r\n        },\r\n        responseWeather => {\r\n          this.errorMsg = responseWeather;\r\n          // console.log(responseWeather);\r\n        },\r\n        () => {\r\n          // console.log(\"handleSwitchSelection() Completed\");\r\n        }\r\n      );\r\n    } else {\r\n      this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\r\n    }\r\n  }\r\n\r\n}\r\n","<div id=\"mainLHSDiv\">\r\n    <div class=\"unitToggler\">\r\n        <div class=\"unitTogglerContentCel\">\r\n            <span>&#8451;</span>\r\n        </div>\r\n        <div class=\"unitTogglerContent\">\r\n            <mat-slide-toggle color=primary [(ngModel)]=\"unitTypeFahrenheit\" (change)=\"handleSwitchSelection()\"></mat-slide-toggle>\r\n        </div>\r\n        <div class=\"unitTogglerContentFah\">\r\n            <span>&#8457;</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"tempCityInfo\" *ngIf=\"OneCallLocationWeatherData\">\r\n        <div class=\"temp\">\r\n            <span class=\"tempValue\">{{currentTemp | number: '1.0-0'}}</span>\r\n            <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n            <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n        </div>\r\n        <div class=\"tempMinMax my-2\">\r\n            <div class=\"tempMin\">\r\n                <span class=\"tempMinValue\">Min: {{todayMinTemp | number: '1.0-0'}}</span>\r\n                <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n                <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n            </div>\r\n            <div class=\"tempMax\">\r\n                <span class=\"tempMaxValue\">Max: {{todayMaxTemp | number: '1.0-0'}}</span>\r\n                <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n                <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"sunRiseSunset my-2\">\r\n            <div class=\"sunRiseDiv\"><i class=\"fa fa-sun-o\" aria-hidden=\"true\"></i> Sunrise: {{sunriseTime | date:'h:mm a'}}</div>\r\n            <div class=\"sunSetDiv\"><i class=\"fa fa-moon-o\" aria-hidden=\"true\"></i> Sunset: {{sunsetTime | date:'h:mm a'}}</div>\r\n        </div>\r\n        <div class=\"weatherIconDiv\">\r\n            <img [src]=\"iconurl\" alt=\"Icon\" class=\"weatherIcon\">\r\n            <span class=\"weatherDesc\">{{weatherDescrption | titlecase}}</span>\r\n        </div>\r\n        <div class=\"cityInfo mx-1\">\r\n            <span><i class=\"fa fa-location-arrow\" aria-hidden=\"true\"></i>&nbsp;{{cityName}}, {{countryName}}</span>\r\n        </div>\r\n        <div class=\"timeInfo my-2 d-grid gap-2\">\r\n            <div class=\"timeInfoDate\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>&nbsp;{{currentDatetime | date:'EEEE, MMM d, y'}}</div>\r\n            <div class=\"timeInfoTime\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>&nbsp;{{currentDatetime | date:'h:mm a'}}</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentWeather } from 'src/app/Models/weather.models';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { OneCallExcludes } from 'src/app/Constants/weather-dashboard-constants';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  cityName: string = '';\r\n  currentWeatherData: CurrentWeather;\r\n  oneCallWeatherData: OneAPICallModel;\r\n  pageLoading: boolean = false;\r\n  showErrorDiv: boolean = false;\r\n  errorMessage: string = '';\r\n  excludes = [OneCallExcludes.Minutely, OneCallExcludes.Hourly];\r\n\r\n  constructor(private _weatherService: WeatherService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getCurrentWeatherByCityName() {\r\n\r\n    this.pageLoading = true;\r\n    \r\n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\r\n    switchMap(data => {\r\n      this.currentWeatherData = data;\r\n      // console.log(\"In main currentWeatherData = \\n\", this.currentWeatherData);\r\n      // console.log(\"In main excludes =\", this.excludes);\r\n      return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\r\n    }))\r\n    .subscribe(\r\n      responseWeatherData => {\r\n        window.setTimeout(() => {\r\n          this.oneCallWeatherData = responseWeatherData;\r\n          // console.log(\"In main.ts this.oneCallWeatherData = \\n\", this.oneCallWeatherData);\r\n          this.pageLoading = false;\r\n          this.showErrorDiv = false;\r\n        }, 2000);\r\n      },\r\n      responseWeatherError => {\r\n        // console.log(\"responseWeatherError = \", responseWeatherError);\r\n        this.oneCallWeatherData = null;\r\n        // this.errorMessage = responseWeatherError;\r\n        this.errorMessage = (this.cityName === '' || this.cityName === null) ? 'Please enter city name' : 'Incorrect city name';\r\n        this.showErrorDiv = true;\r\n        this.pageLoading = false;\r\n      },\r\n      () => {\r\n        // console.log('getCurrentWeatherByCityName Completed');\r\n      }\r\n    );\r\n  }\r\n\r\n  updateDataOnSwitchSelection(data: any) {\r\n    this.oneCallWeatherData = data;\r\n  }\r\n\r\n  onKeyDown() {\r\n    this.showErrorDiv = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid overflow-auto\" id=\"shellDiv\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" style=\"padding: 0;\">\r\n            <app-lhscontents [weatherData]=\"currentWeatherData\" [oneCallWeatherData]=\"oneCallWeatherData\" [excludesArray]=\"excludes\"\r\n            (onUnitTypeChange)=\"updateDataOnSwitchSelection($event)\"></app-lhscontents>\r\n        </div>\r\n        <div class=\"col-md-9\" style=\"padding: 0;\">\r\n            <div [ngClass]=\"{loader:pageLoading}\"></div>\r\n            <div id=\"mainDiv\">\r\n                <div id=\"searchDiv\" [ngStyle]=\"{'height.px': showErrorDiv ? 150 : 100}\">\r\n                    <div class=\"input-group\" id=\"searchDivInput\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\" aria-hidden=\"true\" (click)=\"getCurrentWeatherByCityName()\"></i></span>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter City Name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" \r\n                            [(ngModel)]=\"cityName\" (keyup.enter)=\"getCurrentWeatherByCityName()\" (keydown)=\"onKeyDown()\">\r\n                            <span *ngIf=\"cityName\" class=\"input-group-text\" id=\"basic-addon1\" (click)=\"cityName=''\"><i class=\"fa fa-times\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"showErrorDiv\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>{{errorMessage}}</strong>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\" (click)=\"showErrorDiv=false\"></button>\r\n                    </div>\r\n                </div>\r\n                <app-daily-chart [weatherData]=\"oneCallWeatherData\" [cityName]=\"cityName\"></app-daily-chart>\r\n                <!-- <div class=\"widgetsDiv\">\r\n                    \r\n                </div> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Days } from \"../Models/common.models\";\r\n\r\nexport const CELCIUS_UNIT = 'metric'; // Celsius unit \r\nexport const KELVIN_UNIT = 'standard'; // Kelvin unit (default)\r\nexport const FAHRENHEIT_UNIT = 'imperial'; // Kelvin unit (default)\r\n\r\nexport const FAHRENHEIT = 'fahrenheit';\r\nexport const CELCIUS = 'celcius';\r\n\r\nexport const OneCallExcludes = {\r\n    Current: 'current',\r\n    Minutely: 'minutely',\r\n    Hourly: 'hourly',\r\n    Daily: 'daily',\r\n    Alerts: 'alerts',\r\n};\r\n\r\nexport const DAYS: Days[] = [\r\n    { id: 0, day: 'Sunday' },\r\n    { id: 1, day: 'Monday' },\r\n    { id: 2, day: 'Tuesday' },\r\n    { id: 3, day: 'Wednesday' },\r\n    { id: 4, day: 'Thursday' },\r\n    { id: 5, day: 'Friday' },\r\n    { id: 6, day: 'Saturday' }\r\n];","export function KelvinToCelsius(kelvin: number): number {\r\n    return kelvin - 273.15;\r\n}\r\nexport function CelsiusToKelvin(celsius: number): number {\r\n    return celsius + 273.15;\r\n}\r\n\r\nexport function ConvertUnixToUTC(unixTime: number): string {\r\n    // console.log(\"In helper file\", new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC'));\r\n    // return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC');\r\n    return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ');\r\n}\r\n\r\nexport function LocalDateTime(timezoneOffset: number) {\r\n    const currentDate = new Date();\r\n    const localTime = currentDate.getTime();\r\n    const localOffset = currentDate.getTimezoneOffset() * 60000;\r\n    const utc = localTime + localOffset;\r\n    var dateTime = utc + (1000 * timezoneOffset);\r\n    // console.log(\"In helper file LocalDateTime()\", new Date(dateTime));\r\n    return new Date(dateTime);\r\n}\r\n\r\nexport function LocalDateTimeByUnixTimestamp(ut: number, timezoneOffset: number) {\r\n\r\n    var dateTime = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n    dateTime.setUTCSeconds(ut);\r\n    // console.log(\"dateTime = \", dateTime);\r\n    return dateTime;\r\n}\r\n\r\nexport function TitleCase(str: string) {\r\n    return str.toLowerCase().split(' ').map(function(word) {\r\n      return (word.charAt(0).toUpperCase() + word.slice(1));\r\n    }).join(' ');\r\n  }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { CurrentWeather } from '../Models/weather.models';\r\nimport { Api, APIKey, APIUrl } from '../appConfig';\r\nimport { CELCIUS_UNIT, FAHRENHEIT_UNIT, OneCallExcludes } from '../Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from '../Models/OneAPICallModel.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  private unitTypeSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  loadCurrentWeatherByCityName(cityName: string): Observable<CurrentWeather> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    const url = APIUrl + Api.endpoints.weather + '?q=' + cityName + '&appid=' + APIKey + '&units=' + unit;\r\n    return this._http.get<CurrentWeather>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n  \r\n  loadOneAPICallDataByCurrentData(currentWeatherData: CurrentWeather, excludes: any): Observable<OneAPICallModel> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    let excludesString = '';\r\n    excludes.forEach((value, index) => {\r\n      excludesString += value;\r\n      if (index !== excludes.length - 1) {\r\n        excludesString += ',';\r\n      }\r\n    });\r\n    // console.log(excludesString);\r\n\r\n    let url = '';\r\n    if (excludesString && excludes.length > 0) {\r\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \r\n      '&exclude=' + excludesString + '&appid=' + APIKey + '&units=' + unit;\r\n    } else {\r\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \r\n      '&appid=' + APIKey + '&units=' + unit;\r\n    }\r\n    return this._http.get<OneAPICallModel>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n\r\n  setUnitType(unitType: boolean) {\r\n    this.unitTypeSubject.next(unitType);\r\n  }\r\n\r\n  getUnitType(): Observable<boolean> {\r\n    return this.unitTypeSubject.asObservable();\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    console.error(error);\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather-Dashboard';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './Components/main/main.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LHSContentsComponent } from './Components/lhscontents/lhscontents.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { routing } from './app.routing';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DailyChartComponent } from './Components/daily-chart/daily-chart.component';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    LHSContentsComponent,\r\n    DailyChartComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    routing,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    NgxEchartsModule.forRoot({\r\n      /**\r\n       * This will import all modules from echarts.\r\n       * If you only need custom modules,\r\n       * please refer to [Custom Build] section.\r\n       */\r\n      echarts: () => import('echarts'), // or import('./path-to-my-custom-echarts')\r\n    }),\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MainComponent } from './Components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n    { path: 'dashboard', component: MainComponent},\r\n    { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","export const APIUrl = 'https://api.openweathermap.org/data/2.5/';\r\nexport const IconUrl = 'http://openweathermap.org/img/wn/';\r\nexport const APIKey = '0dd5542d536e51ce47540ed11c8f0ebc';\r\n\r\nexport const Api = {\r\n    endpoints: {\r\n        weather: '/weather',\r\n        box: '/box/city',\r\n        find: '/find',\r\n        oneCall: '/onecall',\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}