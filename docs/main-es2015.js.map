{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/lhscontents/lhscontents.component.ts","./src/app/Components/lhscontents/lhscontents.component.html","./src/app/Components/main/main.component.ts","./src/app/Components/main/main.component.html","./src/app/Constants/weather-dashboard-constants.ts","./src/app/Services/weather-helper.ts","./src/app/Services/weather.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/appConfig.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { IconUrl } from 'src/app/appConfig';\nimport { CELCIUS, FAHRENHEIT } from 'src/app/Constants/weather-dashboard-constants';\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\nimport { CurrentWeather } from 'src/app/Models/weather.models';\nimport { ConvertUnixToUTC } from 'src/app/Services/weather-helper';\nimport { WeatherService } from 'src/app/Services/weather.service';\n\n@Component({\n  selector: 'app-lhscontents',\n  templateUrl: './lhscontents.component.html',\n  styleUrls: ['./lhscontents.component.css']\n})\nexport class LHSContentsComponent implements OnInit {\n\n  constructor(private _weatherService: WeatherService) { }\n\n  cityName: string = '';\n  countryName: string = '';\n  unitTypeFahrenheit: boolean = false;\n  displayUnitType: string = CELCIUS;\n  iconurl: string = '';\n  currentDatetime: string;\n  currentTemp: number;\n  errorMsg: string;\n\n  locationWeatherData: CurrentWeather;\n  OneCallLocationWeatherData: OneAPICallModel;\n\n  @Input()\n  set oneCallWeatherData(data: OneAPICallModel) {\n    this.OneCallLocationWeatherData = data;\n    if(this.OneCallLocationWeatherData) {\n      this.iconurl = IconUrl + this.OneCallLocationWeatherData.current.weather[0].icon + '@4x.png';\n      this.currentDatetime = ConvertUnixToUTC(this.OneCallLocationWeatherData.current.dt);\n      this.currentTemp = this.OneCallLocationWeatherData.current.temp;\n      if (this.locationWeatherData && this.locationWeatherData.name) {\n        this.cityName = this.locationWeatherData.name;\n        this.countryName = this.locationWeatherData.sys.country;\n      }\n      console.log(\"IconUrl\", this.iconurl, \"\\n\", \"currentDatetime\", this.currentDatetime);\n    }\n  }\n\n  @Input()\n  set weatherData(data: CurrentWeather) {\n    this.locationWeatherData = data;\n    // if (this.locationWeatherData && this.locationWeatherData.name) {\n    //   this.cityName = this.locationWeatherData.name;\n    // }\n  }\n\n  @Output() onUnitTypeChange: any = new EventEmitter<CurrentWeather>();\n\n  ngOnInit(): void {\n  }\n\n  handleSwitchSelection() {\n    this._weatherService.setUnitType(this.unitTypeFahrenheit);\n    if (this.OneCallLocationWeatherData && this.cityName) {\n      // this.cityName = this.OneCallLocationWeatherData.timezone.split('/')[1];\n      this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\n        switchMap(data => {\n          this.locationWeatherData = data;\n          console.log(\"In LHS locationWeatherData = \\n\", data);\n          return this._weatherService.loadOneAPICallDataByCurrentData(data, []);\n        }))\n        .subscribe(\n          responseWeatherData => {\n          this.OneCallLocationWeatherData = responseWeatherData;\n          this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\n          this.onUnitTypeChange.emit(this.OneCallLocationWeatherData);\n        },\n        responseWeather => {\n          this.errorMsg = responseWeather;\n          console.log(responseWeather);\n        },\n        () => {\n          console.log(\"handleSwitchSelection() Completed\");\n        }\n      );\n    } else {\n      this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\n    }\n  }\n\n}\n","<div id=\"mainLHSDiv\">\n    <div class=\"unitToggler\">\n        <div class=\"unitTogglerContentCel\">\n            <span>&#8451;</span>\n        </div>\n        <div class=\"unitTogglerContent\">\n            <mat-slide-toggle color=primary [(ngModel)]=\"unitTypeFahrenheit\" (change)=\"handleSwitchSelection()\"></mat-slide-toggle>\n        </div>\n        <div class=\"unitTogglerContentFah\">\n            <span>&#8457;</span>\n        </div>\n    </div>\n    <div class=\"tempInfo\" *ngIf=\"OneCallLocationWeatherData\">\n        <!-- Celcius -->\n        <div class=\"temp\" *ngIf=\"displayUnitType === 'celcius'\">\n            {{currentTemp | number: '1.0-0'}}\n            <span>&#8451;</span>\n        </div>\n        <!-- Fahrenheit -->\n        <div class=\"temp\" *ngIf=\"displayUnitType === 'fahrenheit'\">\n            {{currentTemp | number: '1.0-0'}}\n            <span>&#8457;</span>\n        </div>\n        <div class=\"weatherIconDiv\">\n            <img [src]=\"iconurl\" alt=\"Icon\" class=\"weatherIcon\">\n        </div>\n        <div *ngIf=\"OneCallLocationWeatherData\" class=\"cityInfo\">\n            {{cityName}}, {{countryName}}\n            <!-- {{locationWeatherData.name}}, {{locationWeatherData.sys.country}} -->\n            <!-- {{OneCallLocationWeatherData.timezone}} -->\n        </div>\n        <div *ngIf=\"OneCallLocationWeatherData\" class=\"timeInfo\">\n            {{currentDatetime | date:'MMM d, y, h:mm a'}} &nbsp; <span>UTC</span>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeather } from 'src/app/Models/weather.models';\nimport { WeatherService } from 'src/app/Services/weather.service';\nimport { switchMap } from 'rxjs/operators';\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  cityName: string = '';\n  currentWeatherData: CurrentWeather;\n  oneCallWeatherData: OneAPICallModel;\n  pageLoading: boolean = false;\n  showErrorDiv: boolean = false;\n  errorMessage: string = '';\n  constructor(private _weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n  }\n\n  getCurrentWeatherByCityName() {\n\n    this.pageLoading = true;\n    \n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\n    switchMap(data => {\n      this.currentWeatherData = data;\n      console.log(\"In main currentWeatherData = \\n\", this.currentWeatherData);\n      return this._weatherService.loadOneAPICallDataByCurrentData(data, []);\n    }))\n    .subscribe(\n      responseWeatherData => {\n        window.setTimeout(() => {\n          this.oneCallWeatherData = responseWeatherData;\n          console.log(this.oneCallWeatherData);\n          this.pageLoading = false;\n          this.showErrorDiv = false;\n        }, 2000);\n      },\n      responseWeatherError => {\n        console.log(\"responseWeatherError = \", responseWeatherError);\n        this.oneCallWeatherData = null;\n        // this.errorMessage = responseWeatherError;\n        this.errorMessage = 'Incorrect city name';\n        this.showErrorDiv = true;\n        this.pageLoading = false;\n      },\n      () => {\n        console.log('getCurrentWeatherByCityName Completed');\n      }\n    );\n  }\n\n  updateDataOnSwitchSelection(data: any) {\n    this.oneCallWeatherData = data;\n  }\n\n  onKeyDown() {\n    this.showErrorDiv = false;\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-3\" style=\"padding: 0;\">\n            <app-lhscontents [weatherData]=\"currentWeatherData\" [oneCallWeatherData]=\"oneCallWeatherData\" (onUnitTypeChange)=\"updateDataOnSwitchSelection($event)\"></app-lhscontents>\n        </div>\n        <div class=\"col-md-9\" style=\"padding: 0;\">\n            <div [ngClass]=\"{loader:pageLoading}\"></div>\n            <div id=\"mainDiv\">\n                <div id=\"searchDiv\" [ngStyle]=\"{'height.px': showErrorDiv ? 150 : 100}\">\n                    <div class=\"input-group\" id=\"searchDivInput\">\n                        <div class=\"input-group mb-3\">\n                            <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\" aria-hidden=\"true\" (click)=\"getCurrentWeatherByCityName()\"></i></span>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter City Name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" \n                            [(ngModel)]=\"cityName\" (keyup.enter)=\"getCurrentWeatherByCityName()\" (keydown)=\"onKeyDown()\">\n                            <span *ngIf=\"cityName\" class=\"input-group-text\" id=\"basic-addon1\" (click)=\"cityName=''\"><i class=\"fa fa-times\"></i></span>\n                        </div>\n                    </div>\n                    <div *ngIf=\"showErrorDiv\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                        <strong>{{errorMessage}}</strong>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\" (click)=\"showErrorDiv=false\"></button>\n                    </div>\n                </div>\n                <!-- <div class=\"chartDiv\">\n                    \n                </div> -->\n                <!-- <div class=\"widgetsDiv\">\n                    \n                </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n","export const CELCIUS_UNIT = 'metric'; // Celsius unit \r\nexport const KELVIN_UNIT = 'standard'; // Kelvin unit (default)\r\nexport const FAHRENHEIT_UNIT = 'imperial'; // Kelvin unit (default)\r\n\r\nexport const FAHRENHEIT = 'fahrenheit';\r\nexport const CELCIUS = 'celcius';\r\n\r\nexport const OneCallExcludes = {\r\n    Current: 'current',\r\n    Minutely: 'minutely',\r\n    Hourly: 'hourly',\r\n    Daily: 'daily',\r\n    Alerts: 'alerts',\r\n}","export function KelvinToCelsius(kelvin: number): number {\r\n    return kelvin - 273.15;\r\n}\r\nexport function CelsiusToKelvin(celsius: number): number {\r\n    return celsius + 273.15;\r\n}\r\n\r\nexport function ConvertUnixToUTC(unixTime: number): string {\r\n    // console.log(\"In helper file\", new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC'));\r\n    // return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC');\r\n    return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ');\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { CurrentWeather } from '../Models/weather.models';\nimport { Api, APIKey, APIUrl } from '../appConfig';\nimport { CELCIUS_UNIT, FAHRENHEIT_UNIT, OneCallExcludes } from '../Constants/weather-dashboard-constants';\nimport { OneAPICallModel } from '../Models/OneAPICallModel.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private _http: HttpClient) { }\n\n  private unitTypeSubject = new BehaviorSubject<boolean>(false);\n\n  loadCurrentWeatherByCityName(cityName: string): Observable<CurrentWeather> {\n\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\n    \n    const url = APIUrl + Api.endpoints.weather + '?q=' + cityName + '&appid=' + APIKey + '&units=' + unit;\n    return this._http.get<CurrentWeather>(url).pipe(catchError(this.errorHandler));\n    \n  }\n  \n  loadOneAPICallDataByCurrentData(currentWeatherData: CurrentWeather, excludes: any): Observable<OneAPICallModel> {\n\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\n    \n    let excludesString = '';\n    excludes.forEach((value, index) => {\n      excludesString += value;\n      if (index !== excludes.length - 1) {\n        excludesString += ',';\n      }\n    });\n    console.log(excludesString);\n\n    let url = '';\n    if (excludesString && excludes.length > 0) {\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \n      '&exclude=' + excludesString + '&appid=' + APIKey + '&units=' + unit;\n    } else {\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \n      '&appid=' + APIKey + '&units=' + unit;\n    }\n    return this._http.get<OneAPICallModel>(url).pipe(catchError(this.errorHandler));\n    \n  }\n\n  setUnitType(unitType: boolean) {\n    this.unitTypeSubject.next(unitType);\n  }\n\n  getUnitType(): Observable<boolean> {\n    return this.unitTypeSubject.asObservable();\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    console.error(error);\n    return throwError(error.message || \"Server Error\");\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather-Dashboard';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './Components/main/main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LHSContentsComponent } from './Components/lhscontents/lhscontents.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { routing } from './app.routing';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    LHSContentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    routing,\n    MatSlideToggleModule,\n    FormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MainComponent } from './Components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n    { path: 'dashboard', component: MainComponent},\r\n    { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","export const APIUrl = 'https://api.openweathermap.org/data/2.5/';\r\nexport const IconUrl = 'http://openweathermap.org/img/wn/';\r\nexport const APIKey = '0dd5542d536e51ce47540ed11c8f0ebc';\r\n\r\nexport const Api = {\r\n    endpoints: {\r\n        weather: '/weather',\r\n        box: '/box/city',\r\n        find: '/find',\r\n        oneCall: '/onecall',\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}