{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/daily-chart/daily-chart.component.ts","./src/app/Components/daily-chart/daily-chart.component.html","./src/app/Components/lhscontents/lhscontents.component.ts","./src/app/Components/lhscontents/lhscontents.component.html","./src/app/Components/main/main.component.ts","./src/app/Components/main/main.component.html","./src/app/Constants/weather-dashboard-constants.ts","./src/app/Services/weather-helper.ts","./src/app/Services/weather.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/appConfig.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAKgD;;;;;;ICNzG,yEACI;IAAA,yEACI;IAAA,yEACE;IAAA,oEAAkG;IACpG,4DAAM;IACR,4DAAM;IACZ,4DAAM;;;IAHiB,0DAAyB;IAAzB,0FAAyB;;ADWzC,MAAM,mBAAmB;IAY9B,YAAoB,eAA+B,EAAU,QAAkB;QAA3D,oBAAe,GAAf,eAAe,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAR/E,cAAS,GAAa,EAAE,CAAC;QACzB,gBAAW,GAAa,EAAE,CAAC;QAC3B,gBAAW,GAAa,EAAE,CAAC;QAC3B,kBAAa,GAAW,CAAC,CAAC;QAC1B,kBAAa,GAAW,CAAC,CAAC;QAE1B,UAAK,GAAW,OAAO,CAAC;IAE2D,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACxD,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;IAID,IACI,WAAW,CAAC,IAAqB;QACnC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClG,yDAAyD;YACzD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAE5C,IAAI,WAAW,GAAG,oGAA4B,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;gBAClG,8EAA8E;gBAC9E,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;gBACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAErC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACvF,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YAEpD,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE;gBACL,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,iFAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC/B;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,MAAM;aAChB;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,OAAO;aACd;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,SAAS;aACrB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,eAAe,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG;gBAChD,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,IAAI,CAAC,aAAa;gBACvB,GAAG,EAAE,IAAI,CAAC,aAAa;aACxB;YACD,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,iBAAiB;oBACvB,IAAI,EAAE,IAAI,CAAC,WAAW;oBACtB,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,IAAI;iBACb;gBACD;oBACE,IAAI,EAAE,iBAAiB;oBACvB,IAAI,EAAE,IAAI,CAAC,WAAW;oBACtB,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,IAAI;iBACb;aACF;SACF,CAAC;IACJ,CAAC;;sFAzFU,mBAAmB;mGAAnB,mBAAmB;QCdhC,+GACI;;QADC,kLAAwG;;6FDchG,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAqBE,mDAAK;;kBAEL,mDAAK;;;;;;;;;;;;;;AEpCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACpC;AACC;AACwC;AAGU;AAEvC;;;;;;;ICO3C,uEAA4C;IAAA,iEAAO;IAAA,4DAAO;;;IAC1D,uEAA+C;IAAA,iEAAO;IAAA,4DAAO;;;IAKzD,uEAA4C;IAAA,iEAAO;IAAA,4DAAO;;;IAC1D,uEAA+C;IAAA,iEAAO;IAAA,4DAAO;;;IAI7D,uEAA4C;IAAA,iEAAO;IAAA,4DAAO;;;IAC1D,uEAA+C;IAAA,iEAAO;IAAA,4DAAO;;;IAfzE,yEACI;IAAA,yEACI;IAAA,0EAAwB;IAAA,uDAAiC;;IAAA,4DAAO;IAChE,0HAA4C;IAC5C,0HAA+C;IACnD,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,2EAA2B;IAAA,wDAAuC;;IAAA,4DAAO;IACzE,4HAA4C;IAC5C,4HAA+C;IACnD,4DAAM;IACN,2EACI;IAAA,4EAA2B;IAAA,wDAAuC;;IAAA,4DAAO;IACzE,4HAA4C;IAC5C,4HAA+C;IACnD,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EAAwB;IAAA,oEAA8C;IAAC,wDAAwC;;IAAA,4DAAM;IACrH,2EAAuB;IAAA,oEAA+C;IAAC,wDAAsC;;IAAA,4DAAM;IACvH,4DAAM;IACN,2EACI;IAAA,sEACA;IAAA,4EAA0B;IAAA,wDAAiC;;IAAA,4DAAO;IACtE,4DAAM;IACN,2EACI;IACA,wEAAM;IAAA,4EAKM;IAAA,wDAAmC;IAAA,4DAAO;IAC1D,4DAAM;IACN,2EACI;IAEA,2EACI;IAAA,4EAKY;IAAA,wDAChB;;IAAA,4DAAM;IACN,2EACI;IAAA,4EAKY;IAAA,wDAChB;;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IArD0B,0DAAiC;IAAjC,8JAAiC;IACnD,0DAAqC;IAArC,sGAAqC;IACrC,0DAAwC;IAAxC,yGAAwC;IAIf,0DAAuC;IAAvC,8KAAuC;IAC5D,0DAAqC;IAArC,sGAAqC;IACrC,0DAAwC;IAAxC,yGAAwC;IAGnB,0DAAuC;IAAvC,8KAAuC;IAC5D,0DAAqC;IAArC,sGAAqC;IACrC,0DAAwC;IAAxC,yGAAwC;IAIqB,0DAAwC;IAAxC,mLAAwC;IACxC,0DAAsC;IAAtC,iLAAsC;IAGxG,0DAAe;IAAf,4IAAe;IACM,0DAAiC;IAAjC,4JAAiC;IAS/C,0DAAmC;IAAnC,yHAAmC;IAW/B,0DAChB;IADgB,4LAChB;IAOgB,0DAChB;IADgB,oLAChB;;ADlDL,MAAM,oBAAoB;IAE/B,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAEnD,aAAQ,GAAW,EAAE,CAAC;QACtB,gBAAW,GAAW,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;QACpC,oBAAe,GAAW,qFAAO,CAAC;QAClC,YAAO,GAAW,EAAE,CAAC;QAKrB,sBAAiB,GAAW,EAAE,CAAC;QAsDrB,qBAAgB,GAAQ,IAAI,0DAAY,EAAkB,CAAC;IAjEd,CAAC;IAoBxD,IACI,kBAAkB,CAAC,IAAqB;QAC1C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;QACvC,IAAG,IAAI,CAAC,0BAA0B,EAAE;YAElC,IAAI,CAAC,OAAO,GAAG,yDAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC;YAE7F,IAAI,CAAC,eAAe,GAAG,qFAAa,CAAC,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;YAEtF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,IAAI,CAAC;YAChE,8DAA8D;YAC9D,8DAA8D;YAC9D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YACtE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YAEtE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAEzE,IAAI,CAAC,WAAW,GAAG,oGAA4B,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;YAClJ,IAAI,CAAC,UAAU,GAAG,oGAA4B,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;YAEhJ,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE;gBAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBAC9C,2DAA2D;gBAC3D,IAAI,SAAS,GAAG,mBAAO,CAAC,sEAAoB,CAAC,CAAC;gBAC9C,+DAA+D;gBAC/D,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC;aACxG;YACD,uFAAuF;SACxF;IACH,CAAC;IAED,IACI,WAAW,CAAC,IAAoB;QAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,mEAAmE;QACnE,mDAAmD;QACnD,IAAI;IACN,CAAC;IAED,IACI,aAAa,CAAC,KAAU;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,oDAAoD;IACtD,CAAC;IAID,QAAQ;QACN,iEAA+B,CAAC,mBAAO,CAAC,yFAAkC,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC1D,IAAI,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACpD,0EAA0E;YAC1E,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CACnE,gEAAS,CAAC,IAAI,CAAC,EAAE;gBACf,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,wDAAwD;gBACxD,OAAO,IAAI,CAAC,eAAe,CAAC,+BAA+B,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC;iBACF,SAAS,CACR,mBAAmB,CAAC,EAAE;gBACtB,IAAI,CAAC,0BAA0B,GAAG,mBAAmB,CAAC;gBACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,wFAAU,CAAC,CAAC,CAAC,qFAAO,CAAC;gBACtE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC9D,CAAC,EACD,eAAe,CAAC,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;gBAChC,gCAAgC;YAClC,CAAC,EACD,GAAG,EAAE;gBACH,oDAAoD;YACtD,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,wFAAU,CAAC,CAAC,CAAC,qFAAO,CAAC;SACvE;IACH,CAAC;;wFApGU,oBAAoB;oGAApB,oBAAoB;QCfjC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEAAM;QAAA,iEAAO;QAAA,4DAAO;QACxB,4DAAM;QACN,yEACI;QAAA,sFAAuH;QAAvF,+MAAgC,gGAAW,2BAAuB,IAAlC;QAAoC,4DAAmB;QAC3H,4DAAM;QACN,yEACI;QAAA,uEAAM;QAAA,iEAAO;QAAA,4DAAO;QACxB,4DAAM;QACV,4DAAM;QACN,oHACI;QAuDR,4DAAM;;QA9DsC,0DAAgC;QAAhC,2FAAgC;QAM9C,0DAAkC;QAAlC,gGAAkC;;6FDGnD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAuBE,mDAAK;;kBA+BL,mDAAK;;kBAQL,mDAAK;;kBAML,oDAAM;;;;;;;;;;;;;;AElFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGP;AAEqC;;;;;;;;;ICiBpD,2EAAwF;IAAtB,6SAAkB,EAAE,IAAC;IAAC,mEACxD;IAAA,4DAAO;;;;IAG/C,0EACI;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAAS;IACjC,6EAC0C;IAAtC,kTAAsB,KAAK,IAAC;IAAC,4DAAS;IAC9C,4DAAM;;;IAHM,0DAAgB;IAAhB,oFAAgB;;;;ADfzC,MAAM,aAAa;IAUxB,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QARnD,aAAQ,GAAW,EAAE,CAAC;QAGtB,gBAAW,GAAY,KAAK,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAC9B,iBAAY,GAAW,EAAE,CAAC;QAC1B,aAAQ,GAAG,CAAC,6FAAe,CAAC,QAAQ,EAAE,6FAAe,CAAC,MAAM,CAAC,CAAC;IAEP,CAAC;IAExD,QAAQ;IACR,CAAC;IAED,2BAA2B;QAEzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CACrE,gEAAS,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,2EAA2E;YAC3E,oDAAoD;YACpD,OAAO,IAAI,CAAC,eAAe,CAAC,+BAA+B,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;aACF,SAAS,CACR,mBAAmB,CAAC,EAAE;YACpB,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBACrB,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;gBAC9C,mFAAmF;gBACnF,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,oBAAoB,CAAC,EAAE;YACrB,gEAAgE;YAChE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,4CAA4C;YAC5C,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,qBAAqB,CAAC;YACxH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,EACD,GAAG,EAAE;YACH,wDAAwD;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2BAA2B,CAAC,IAAS;QACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;;0EAvDU,aAAa;6FAAb,aAAa;QCZ1B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qFAC0G;QAA3E,0KAAoB,uCAAmC,IAAC;QAAC,4DAAkB;QAC9G,4DAAM;QACN,yEACI;QAAA,oEAA4C;QAC5C,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QACA,4EACI;QAAA,iFAGY;QADR,yIAAS,iCAA6B,IAAC;QAC3C,4DAAY;QAChB,4DAAO;QACP,6EAGA;QAFoC,oLAAsB,yFACvC,iCAA6B,IADU,iFACG,eAAW,IADd;QAD1D,4DAGA;QAAA,8GAAwF;QAE5F,4DAAM;QACV,4DAAM;QACN,4GACI;QAIR,4DAAM;QACN,kFAA4F;QAIhG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QApCuB,0DAAkC;QAAlC,+FAAkC;QAI9C,0DAAgC;QAAhC,4JAAgC;QAEb,0DAAmD;QAAnD,yKAAmD;QAWvB,0DAAsB;QAAtB,iFAAsB;QAEpD,0DAAgB;QAAhB,8EAAgB;QAIzB,0DAAoB;QAApB,kFAAoB;QAMZ,0DAAkC;QAAlC,+FAAkC;;6FDpBtD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,gBAAgB;AAC/C,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC,wBAAwB;AACxD,MAAM,eAAe,GAAG,UAAU,CAAC,CAAC,wBAAwB;AAE5D,MAAM,UAAU,GAAG,YAAY,CAAC;AAChC,MAAM,OAAO,GAAG,SAAS,CAAC;AAE1B,MAAM,eAAe,GAAG;IAC3B,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,QAAQ;CACnB,CAAC;AAEK,MAAM,IAAI,GAAW;IACxB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE;IACxB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE;IACxB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE;IACzB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE;IAC3B,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE;IAC1B,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE;IACxB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE;CAC7B,CAAC;;;;;;;;;;;;;ACzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,eAAe,CAAC,MAAc;IAC1C,OAAO,MAAM,GAAG,MAAM,CAAC;AAC3B,CAAC;AACM,SAAS,eAAe,CAAC,OAAe;IAC3C,OAAO,OAAO,GAAG,MAAM,CAAC;AAC5B,CAAC;AAEM,SAAS,gBAAgB,CAAC,QAAgB;IAC7C,wHAAwH;IACxH,gGAAgG;IAChG,OAAO,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAClF,CAAC;AAEM,SAAS,aAAa,CAAC,cAAsB;IAChD,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;IAC/B,MAAM,SAAS,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;IACxC,MAAM,WAAW,GAAG,WAAW,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC;IAC5D,MAAM,GAAG,GAAG,SAAS,GAAG,WAAW,CAAC;IACpC,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC;IAC7C,qEAAqE;IACrE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAEM,SAAS,4BAA4B,CAAC,EAAU,EAAE,cAAsB;IAE3E,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,2DAA2D;IACvF,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC3B,wCAAwC;IACxC,OAAO,QAAQ,CAAC;AACpB,CAAC;AAEM,SAAS,SAAS,CAAC,GAAW;IACjC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAS,IAAI;QACnD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC;;;;;;;;;;;;;ACnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAE6B;AAC5B;AAEO;AACuD;;;AAMnG,MAAM,cAAc;IAEzB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAE7B,oBAAe,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAFrB,CAAC;IAI1C,4BAA4B,CAAC,QAAgB;QAE3C,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,sFAAe,CAAC,CAAC,CAAC,mFAAY,CAAC;QAE9E,MAAM,GAAG,GAAG,iDAAM,GAAG,8CAAG,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,GAAG,QAAQ,GAAG,SAAS,GAAG,iDAAM,GAAG,SAAS,GAAG,IAAI,CAAC;QACtG,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAEjF,CAAC;IAED,+BAA+B,CAAC,kBAAkC,EAAE,QAAa;QAE/E,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,sFAAe,CAAC,CAAC,CAAC,mFAAY,CAAC;QAE9E,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAChC,cAAc,IAAI,KAAK,CAAC;YACxB,IAAI,KAAK,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,cAAc,IAAI,GAAG,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QACH,+BAA+B;QAE/B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,cAAc,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,GAAG,GAAG,iDAAM,GAAG,8CAAG,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG;gBACtH,WAAW,GAAG,cAAc,GAAG,SAAS,GAAG,iDAAM,GAAG,SAAS,GAAG,IAAI,CAAC;SACtE;aAAM;YACL,GAAG,GAAG,iDAAM,GAAG,8CAAG,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG;gBACtH,SAAS,GAAG,iDAAM,GAAG,SAAS,GAAG,IAAI,CAAC;SACvC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAkB,GAAG,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAElF,CAAC;IAED,WAAW,CAAC,QAAiB;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED,YAAY,CAAC,KAAwB;QACnC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,uDAAU,CAAC,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC,CAAC;IACrD,CAAC;;4EAnDU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,mBAAmB,CAAC;KAC7B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACO;AAElB;AACkB;AACc;AACO;AAC9B;AAChB;AAC8B;AACzB;AACY;AACF;AACW;AACP;AAC0B;AACtC;AACJ;AACe;AAC1B;;;;AAiCzB,MAAM,SAAS;IACpB;QACE,gFAAqB,CAAC,kDAAM,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;;wFAHU,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBAJT,CAAC,yDAAQ,CAAC,YApBZ;YACP,uEAAa;YACb,4FAAuB;YACvB,qEAAgB;YAChB,oDAAO;YACP,mFAAoB;YACpB,0DAAW;YACX,uEAAc;YACd,qEAAa;YACb,gFAAkB;YAClB,yEAAe;YACf,6DAAgB,CAAC,OAAO,CAAC;gBACvB;;;;mBAIG;gBACH,OAAO,EAAE,GAAG,EAAE,CAAC,sJAAiB;aACjC,CAAC;SACH;mIAKU,SAAS,mBA7BlB,2DAAY;QACZ,6EAAa;QACb,kGAAoB;QACpB,kGAAmB,aAGnB,uEAAa;QACb,4FAAuB;QACvB,qEAAgB,iEAEhB,mFAAoB;QACpB,0DAAW;QACX,uEAAc;QACd,qEAAa;QACb,gFAAkB;QAClB,yEAAe;6FAcN,SAAS;cA/BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,6EAAa;oBACb,kGAAoB;oBACpB,kGAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,qEAAgB;oBAChB,oDAAO;oBACP,mFAAoB;oBACpB,0DAAW;oBACX,uEAAc;oBACd,qEAAa;oBACb,gFAAkB;oBAClB,yEAAe;oBACf,6DAAgB,CAAC,OAAO,CAAC;wBACvB;;;;2BAIG;wBACH,OAAO,EAAE,GAAG,EAAE,CAAC,sJAAiB;qBACjC,CAAC;iBACH;gBACD,SAAS,EAAE,CAAC,yDAAQ,CAAC;gBACrB,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,OAAO,EAAE,CAAC,oEAAsB,CAAC;aAClC;;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAA;AAAuD;AAEU;AAEjE,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6EAAa,EAAC;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;CAC9D,CAAC;AAEK,MAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACVzE;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,MAAM,GAAG,0CAA0C,CAAC;AAC1D,MAAM,OAAO,GAAG,mCAAmC,CAAC;AACpD,MAAM,MAAM,GAAG,kCAAkC,CAAC;AAElD,MAAM,GAAG,GAAG;IACf,SAAS,EAAE;QACP,OAAO,EAAE,UAAU;QACnB,GAAG,EAAE,WAAW;QAChB,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,UAAU;KACtB;CACJ;;;;;;;;;;;;;ACXD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { EChartOption } from 'echarts';\r\nimport { min } from 'rxjs/operators';\r\nimport { DAYS } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp, TitleCase } from 'src/app/Services/weather-helper';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-daily-chart',\r\n  templateUrl: './daily-chart.component.html',\r\n  styleUrls: ['./daily-chart.component.css']\r\n})\r\nexport class DailyChartComponent implements OnInit {\r\n\r\n  chartweatherData: OneAPICallModel;\r\n  eChartOptions: EChartOption;\r\n  xAxisData: string[] = [];\r\n  seriesData1: number[] = [];\r\n  seriesData2: number[] = [];\r\n  minYAxisValue: number = 0;\r\n  maxYAxisValue: number = 0;\r\n  unitTypeValue: string;\r\n  theme: string = 'light';\r\n\r\n  constructor(private _weatherService: WeatherService, private datePipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this._weatherService.getUnitType().subscribe((res: any) => {  \r\n      this.unitTypeValue = (res) ? '°F' : '°C';\r\n    })\r\n  }\r\n\r\n  @Input() cityName: string;\r\n\r\n  @Input()\r\n  set weatherData(data: OneAPICallModel) {\r\n    this.chartweatherData = data;\r\n    if (this.chartweatherData && this.chartweatherData.daily && this.chartweatherData.daily.length > 0) {\r\n      // console.log(\"In daily-chart \", this.chartweatherData);\r\n      this.xAxisData = [];\r\n      this.seriesData1 = [];\r\n      this.seriesData2 = [];\r\n      this.chartweatherData.daily.forEach(element => {\r\n        \r\n        let newDateTime = LocalDateTimeByUnixTimestamp(element.dt, this.chartweatherData.timezone_offset);\r\n        // let dayOfWeek = DAYS.filter(day => day.id === newDateTime.getDay())[0].day;\r\n        let xAxisArrayValue = this.datePipe.transform(newDateTime, 'dd/MM');\r\n        this.xAxisData.push(xAxisArrayValue);\r\n\r\n        this.seriesData1.push(element.temp.min);\r\n        this.seriesData2.push(element.temp.max);\r\n      });\r\n      \r\n      let min_value = Math.min(Math.min(...this.seriesData1), Math.min(...this.seriesData2));\r\n      let max_value = Math.max(Math.max(...this.seriesData1), Math.max(...this.seriesData2));\r\n      this.minYAxisValue = Math.floor(min_value / 10) * 10;\r\n      this.maxYAxisValue = Math.ceil(max_value / 10) * 10;\r\n\r\n      this.smoothLineChart();\r\n    }\r\n  }\r\n\r\n  smoothLineChart() {\r\n    this.eChartOptions = {\r\n      title: {\r\n        show: true,\r\n        text: TitleCase(this.cityName)\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      legend: {\r\n        show: true,\r\n        type: 'plain'\r\n      },\r\n      xAxis: {\r\n        name: 'Day',\r\n        type: 'category',\r\n        data: this.xAxisData\r\n      },\r\n      yAxis: {\r\n        name: 'Temperature (' + this.unitTypeValue + ')',\r\n        type: 'value',\r\n        min: this.minYAxisValue,\r\n        max: this.maxYAxisValue\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Min temperature',\r\n          data: this.seriesData1,\r\n          type: 'line',\r\n          smooth: true\r\n        },\r\n        {\r\n          name: 'Max temperature',\r\n          data: this.seriesData2,\r\n          type: 'line',\r\n          smooth: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"eChartOptions && chartweatherData && chartweatherData.daily && chartweatherData.daily.length > 0\" class=\"chartDiv\">\r\n    <div class=\"card chartCard mx-auto\">\r\n        <div class=\"card-body chartCardBody\">\r\n          <div echarts [options]=\"eChartOptions\" class=\"demo-chart\" style=\"height: 350px !important;\"></div>\r\n        </div>\r\n      </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { IconUrl } from 'src/app/appConfig';\r\nimport { CELCIUS, FAHRENHEIT } from 'src/app/Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { CurrentWeather } from 'src/app/Models/weather.models';\r\nimport { LocalDateTime, LocalDateTimeByUnixTimestamp } from 'src/app/Services/weather-helper';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\nimport * as i18nIsoCountries from 'i18n-iso-countries';\r\n\r\n@Component({\r\n  selector: 'app-lhscontents',\r\n  templateUrl: './lhscontents.component.html',\r\n  styleUrls: ['./lhscontents.component.css']\r\n})\r\nexport class LHSContentsComponent implements OnInit {\r\n\r\n  constructor(private _weatherService: WeatherService) { }\r\n\r\n  cityName: string = '';\r\n  countryName: string = '';\r\n  unitTypeFahrenheit: boolean = false;\r\n  displayUnitType: string = CELCIUS;\r\n  iconurl: string = '';\r\n  currentDatetime: Date;\r\n  currentTemp: number;\r\n  todayMinTemp: number;\r\n  todayMaxTemp: number;\r\n  weatherDescrption: string = '';\r\n  sunriseTime: Date;\r\n  sunsetTime: Date;\r\n  errorMsg: string;\r\n\r\n  locationWeatherData: CurrentWeather;\r\n  OneCallLocationWeatherData: OneAPICallModel;\r\n  excludes: any;\r\n\r\n  @Input()\r\n  set oneCallWeatherData(data: OneAPICallModel) {\r\n    this.OneCallLocationWeatherData = data;\r\n    if(this.OneCallLocationWeatherData) {\r\n\r\n      this.iconurl = IconUrl + this.OneCallLocationWeatherData.current.weather[0].icon + '@4x.png';\r\n\r\n      this.currentDatetime = LocalDateTime(this.OneCallLocationWeatherData.timezone_offset);\r\n\r\n      this.currentTemp = this.OneCallLocationWeatherData.current.temp;\r\n      // this.todayMinTemp = this.locationWeatherData.main.temp_min;\r\n      // this.todayMaxTemp = this.locationWeatherData.main.temp_max;\r\n      this.todayMinTemp = this.OneCallLocationWeatherData.daily[0].temp.min;\r\n      this.todayMaxTemp = this.OneCallLocationWeatherData.daily[0].temp.max;\r\n\r\n      this.weatherDescrption = this.locationWeatherData.weather[0].description;\r\n\r\n      this.sunriseTime = LocalDateTimeByUnixTimestamp(this.OneCallLocationWeatherData.current.sunrise, this.OneCallLocationWeatherData.timezone_offset);\r\n      this.sunsetTime = LocalDateTimeByUnixTimestamp(this.OneCallLocationWeatherData.current.sunset, this.OneCallLocationWeatherData.timezone_offset);\r\n\r\n      if (this.locationWeatherData && this.locationWeatherData.name) {\r\n        this.cityName = this.locationWeatherData.name;\r\n        // this.countryName = this.locationWeatherData.sys.country;\r\n        var countries = require(\"i18n-iso-countries\");\r\n        // console.log(countries.getNames(\"en\", {select: \"official\"}));\r\n        this.countryName = countries.getName(this.locationWeatherData.sys.country, \"en\", {select: \"official\"});\r\n      }\r\n      // console.log(\"IconUrl\", this.iconurl, \"\\n\", \"currentDatetime\", this.currentDatetime);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set weatherData(data: CurrentWeather) {\r\n    this.locationWeatherData = data;\r\n    // if (this.locationWeatherData && this.locationWeatherData.name) {\r\n    //   this.cityName = this.locationWeatherData.name;\r\n    // }\r\n  }\r\n\r\n  @Input()\r\n  set excludesArray(array: any) {\r\n    this.excludes = array;\r\n    // console.log(\"In LHS excludes = \", this.excludes);\r\n  }\r\n\r\n  @Output() onUnitTypeChange: any = new EventEmitter<CurrentWeather>();\r\n\r\n  ngOnInit(): void {\r\n    i18nIsoCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\r\n  }\r\n\r\n  handleSwitchSelection() {\r\n    this._weatherService.setUnitType(this.unitTypeFahrenheit);\r\n    if (this.OneCallLocationWeatherData && this.cityName) {\r\n      // this.cityName = this.OneCallLocationWeatherData.timezone.split('/')[1];\r\n      this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\r\n        switchMap(data => {\r\n          this.locationWeatherData = data;\r\n          // console.log(\"In LHS locationWeatherData = \\n\", data);\r\n          return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\r\n        }))\r\n        .subscribe(\r\n          responseWeatherData => {\r\n          this.OneCallLocationWeatherData = responseWeatherData;\r\n          this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\r\n          this.onUnitTypeChange.emit(this.OneCallLocationWeatherData);\r\n        },\r\n        responseWeather => {\r\n          this.errorMsg = responseWeather;\r\n          // console.log(responseWeather);\r\n        },\r\n        () => {\r\n          // console.log(\"handleSwitchSelection() Completed\");\r\n        }\r\n      );\r\n    } else {\r\n      this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\r\n    }\r\n  }\r\n\r\n}\r\n","<div id=\"mainLHSDiv\">\r\n    <div class=\"unitToggler\">\r\n        <div class=\"unitTogglerContentCel\">\r\n            <span>&#8451;</span>\r\n        </div>\r\n        <div class=\"unitTogglerContent\">\r\n            <mat-slide-toggle color=primary [(ngModel)]=\"unitTypeFahrenheit\" (change)=\"handleSwitchSelection()\"></mat-slide-toggle>\r\n        </div>\r\n        <div class=\"unitTogglerContentFah\">\r\n            <span>&#8457;</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"tempCityInfo\" *ngIf=\"OneCallLocationWeatherData\">\r\n        <div class=\"temp\">\r\n            <span class=\"tempValue\">{{currentTemp | number: '1.0-0'}}</span>\r\n            <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n            <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n        </div>\r\n        <div class=\"tempMinMax my-2\">\r\n            <div class=\"tempMin\">\r\n                <span class=\"tempMinValue\">Min: {{todayMinTemp | number: '1.0-0'}}</span>\r\n                <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n                <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n            </div>\r\n            <div class=\"tempMax\">\r\n                <span class=\"tempMaxValue\">Max: {{todayMaxTemp | number: '1.0-0'}}</span>\r\n                <span *ngIf=\"displayUnitType === 'celcius'\">&#8451;</span>\r\n                <span *ngIf=\"displayUnitType === 'fahrenheit'\">&#8457;</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"sunRiseSunset my-2\">\r\n            <div class=\"sunRiseDiv\"><i class=\"fa fa-sun-o\" aria-hidden=\"true\"></i> Sunrise: {{sunriseTime | date:'h:mm a'}}</div>\r\n            <div class=\"sunSetDiv\"><i class=\"fa fa-moon-o\" aria-hidden=\"true\"></i> Sunset: {{sunsetTime | date:'h:mm a'}}</div>\r\n        </div>\r\n        <div class=\"weatherIconDiv\">\r\n            <img [src]=\"iconurl\" alt=\"Icon\" class=\"weatherIcon\">\r\n            <span class=\"weatherDesc\">{{weatherDescrption | titlecase}}</span>\r\n        </div>\r\n        <div class=\"cityInfo mx-1\">\r\n            <!-- <span><i class=\"fa fa-location-arrow\" aria-hidden=\"true\"></i>&nbsp;{{cityName}}, {{countryName}}</span> -->\r\n            <span><lord-icon\r\n                src=\"https://cdn.lordicon.com/zzcjjxew.json\"\r\n                trigger=\"loop\"\r\n                colors=\"primary:#ffffff,secondary:#ffffff\"\r\n                style=\"width:50px;height:50px\">\r\n            </lord-icon>&nbsp;{{cityName}}, {{countryName}}</span>\r\n        </div>\r\n        <div class=\"timeInfo my-2 d-grid gap-2\">\r\n            <!-- <div class=\"timeInfoDate\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>&nbsp;{{currentDatetime | date:'EEEE, MMM d, y'}}</div>\r\n            <div class=\"timeInfoTime\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>&nbsp;{{currentDatetime | date:'h:mm a'}}</div> -->\r\n            <div class=\"timeInfoDate\">\r\n                <lord-icon\r\n                    src=\"https://cdn.lordicon.com/gmzxduhd.json\"\r\n                    trigger=\"loop\"\r\n                    colors=\"primary:#ffffff,secondary:#ffffff\"\r\n                    style=\"width:50px;height:50px\">\r\n                </lord-icon>&nbsp;{{currentDatetime | date:'EEEE, MMM d, y'}}\r\n            </div>\r\n            <div class=\"timeInfoTime\">\r\n                <lord-icon\r\n                    src=\"https://cdn.lordicon.com/kbtmbyzy.json\"\r\n                    trigger=\"loop\"\r\n                    colors=\"primary:#ffffff,secondary:#ffffff\"\r\n                    style=\"width:50px;height:50px\">\r\n                </lord-icon>&nbsp;{{currentDatetime | date:'h:mm a'}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentWeather } from 'src/app/Models/weather.models';\r\nimport { WeatherService } from 'src/app/Services/weather.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { OneAPICallModel } from 'src/app/Models/OneAPICallModel.models';\r\nimport { OneCallExcludes } from 'src/app/Constants/weather-dashboard-constants';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  cityName: string = '';\r\n  currentWeatherData: CurrentWeather;\r\n  oneCallWeatherData: OneAPICallModel;\r\n  pageLoading: boolean = false;\r\n  showErrorDiv: boolean = false;\r\n  errorMessage: string = '';\r\n  excludes = [OneCallExcludes.Minutely, OneCallExcludes.Hourly];\r\n\r\n  constructor(private _weatherService: WeatherService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getCurrentWeatherByCityName() {\r\n\r\n    this.pageLoading = true;\r\n    \r\n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).pipe(\r\n    switchMap(data => {\r\n      this.currentWeatherData = data;\r\n      // console.log(\"In main currentWeatherData = \\n\", this.currentWeatherData);\r\n      // console.log(\"In main excludes =\", this.excludes);\r\n      return this._weatherService.loadOneAPICallDataByCurrentData(data, this.excludes);\r\n    }))\r\n    .subscribe(\r\n      responseWeatherData => {\r\n        window.setTimeout(() => {\r\n          this.oneCallWeatherData = responseWeatherData;\r\n          // console.log(\"In main.ts this.oneCallWeatherData = \\n\", this.oneCallWeatherData);\r\n          this.pageLoading = false;\r\n          this.showErrorDiv = false;\r\n        }, 2000);\r\n      },\r\n      responseWeatherError => {\r\n        // console.log(\"responseWeatherError = \", responseWeatherError);\r\n        this.oneCallWeatherData = null;\r\n        // this.errorMessage = responseWeatherError;\r\n        this.errorMessage = (this.cityName === '' || this.cityName === null) ? 'Please enter city name' : 'Incorrect city name';\r\n        this.showErrorDiv = true;\r\n        this.pageLoading = false;\r\n      },\r\n      () => {\r\n        // console.log('getCurrentWeatherByCityName Completed');\r\n      }\r\n    );\r\n  }\r\n\r\n  updateDataOnSwitchSelection(data: any) {\r\n    this.oneCallWeatherData = data;\r\n  }\r\n\r\n  onKeyDown() {\r\n    this.showErrorDiv = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid overflow-auto\" id=\"shellDiv\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" style=\"padding: 0;\">\r\n            <app-lhscontents [weatherData]=\"currentWeatherData\" [oneCallWeatherData]=\"oneCallWeatherData\"\r\n                [excludesArray]=\"excludes\" (onUnitTypeChange)=\"updateDataOnSwitchSelection($event)\"></app-lhscontents>\r\n        </div>\r\n        <div class=\"col-md-9\" style=\"padding: 0;\">\r\n            <div [ngClass]=\"{loader:pageLoading}\"></div>\r\n            <div id=\"mainDiv\">\r\n                <div id=\"searchDiv\" [ngStyle]=\"{'height.px': showErrorDiv ? 150 : 100}\">\r\n                    <div class=\"input-group\" id=\"searchDivInput\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <!-- <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\" aria-hidden=\"true\" (click)=\"getCurrentWeatherByCityName()\"></i></span> -->\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <lord-icon src=\"https://cdn.lordicon.com/msoeawqm.json\" trigger=\"click\"\r\n                                    colors=\"primary:#121331,secondary:#08a88a\" stroke=\"100\"\r\n                                    (click)=\"getCurrentWeatherByCityName()\">\r\n                                </lord-icon>\r\n                            </span>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter City Name\" aria-label=\"Username\"\r\n                                aria-describedby=\"basic-addon1\" [(ngModel)]=\"cityName\"\r\n                                (keyup.enter)=\"getCurrentWeatherByCityName()\" (keydown)=\"onKeyDown()\">\r\n                            <span *ngIf=\"cityName\" class=\"input-group-text\" id=\"basic-addon1\" (click)=\"cityName=''\"><i\r\n                                    class=\"fa fa-times\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"showErrorDiv\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>{{errorMessage}}</strong>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"\r\n                            (click)=\"showErrorDiv=false\"></button>\r\n                    </div>\r\n                </div>\r\n                <app-daily-chart [weatherData]=\"oneCallWeatherData\" [cityName]=\"cityName\"></app-daily-chart>\r\n                <!-- <div class=\"widgetsDiv\">\r\n                    \r\n                </div> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Days } from \"../Models/common.models\";\r\n\r\nexport const CELCIUS_UNIT = 'metric'; // Celsius unit \r\nexport const KELVIN_UNIT = 'standard'; // Kelvin unit (default)\r\nexport const FAHRENHEIT_UNIT = 'imperial'; // Kelvin unit (default)\r\n\r\nexport const FAHRENHEIT = 'fahrenheit';\r\nexport const CELCIUS = 'celcius';\r\n\r\nexport const OneCallExcludes = {\r\n    Current: 'current',\r\n    Minutely: 'minutely',\r\n    Hourly: 'hourly',\r\n    Daily: 'daily',\r\n    Alerts: 'alerts',\r\n};\r\n\r\nexport const DAYS: Days[] = [\r\n    { id: 0, day: 'Sunday' },\r\n    { id: 1, day: 'Monday' },\r\n    { id: 2, day: 'Tuesday' },\r\n    { id: 3, day: 'Wednesday' },\r\n    { id: 4, day: 'Thursday' },\r\n    { id: 5, day: 'Friday' },\r\n    { id: 6, day: 'Saturday' }\r\n];","export function KelvinToCelsius(kelvin: number): number {\r\n    return kelvin - 273.15;\r\n}\r\nexport function CelsiusToKelvin(celsius: number): number {\r\n    return celsius + 273.15;\r\n}\r\n\r\nexport function ConvertUnixToUTC(unixTime: number): string {\r\n    // console.log(\"In helper file\", new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC'));\r\n    // return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ').concat(' UTC');\r\n    return new Date(unixTime * 1000).toISOString().slice(0, 19).replace('T', ' ');\r\n}\r\n\r\nexport function LocalDateTime(timezoneOffset: number) {\r\n    const currentDate = new Date();\r\n    const localTime = currentDate.getTime();\r\n    const localOffset = currentDate.getTimezoneOffset() * 60000;\r\n    const utc = localTime + localOffset;\r\n    var dateTime = utc + (1000 * timezoneOffset);\r\n    // console.log(\"In helper file LocalDateTime()\", new Date(dateTime));\r\n    return new Date(dateTime);\r\n}\r\n\r\nexport function LocalDateTimeByUnixTimestamp(ut: number, timezoneOffset: number) {\r\n\r\n    var dateTime = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n    dateTime.setUTCSeconds(ut);\r\n    // console.log(\"dateTime = \", dateTime);\r\n    return dateTime;\r\n}\r\n\r\nexport function TitleCase(str: string) {\r\n    return str.toLowerCase().split(' ').map(function(word) {\r\n      return (word.charAt(0).toUpperCase() + word.slice(1));\r\n    }).join(' ');\r\n  }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { CurrentWeather } from '../Models/weather.models';\r\nimport { Api, APIKey, APIUrl } from '../appConfig';\r\nimport { CELCIUS_UNIT, FAHRENHEIT_UNIT, OneCallExcludes } from '../Constants/weather-dashboard-constants';\r\nimport { OneAPICallModel } from '../Models/OneAPICallModel.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  private unitTypeSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  loadCurrentWeatherByCityName(cityName: string): Observable<CurrentWeather> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    const url = APIUrl + Api.endpoints.weather + '?q=' + cityName + '&appid=' + APIKey + '&units=' + unit;\r\n    return this._http.get<CurrentWeather>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n  \r\n  loadOneAPICallDataByCurrentData(currentWeatherData: CurrentWeather, excludes: any): Observable<OneAPICallModel> {\r\n\r\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\r\n    \r\n    let excludesString = '';\r\n    excludes.forEach((value, index) => {\r\n      excludesString += value;\r\n      if (index !== excludes.length - 1) {\r\n        excludesString += ',';\r\n      }\r\n    });\r\n    // console.log(excludesString);\r\n\r\n    let url = '';\r\n    if (excludesString && excludes.length > 0) {\r\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \r\n      '&exclude=' + excludesString + '&appid=' + APIKey + '&units=' + unit;\r\n    } else {\r\n      url = APIUrl + Api.endpoints.oneCall + '?lat=' + currentWeatherData.coord.lat + '&lon=' + currentWeatherData.coord.lon + \r\n      '&appid=' + APIKey + '&units=' + unit;\r\n    }\r\n    return this._http.get<OneAPICallModel>(url).pipe(catchError(this.errorHandler));\r\n    \r\n  }\r\n\r\n  setUnitType(unitType: boolean) {\r\n    this.unitTypeSubject.next(unitType);\r\n  }\r\n\r\n  getUnitType(): Observable<boolean> {\r\n    return this.unitTypeSubject.asObservable();\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    console.error(error);\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather-Dashboard';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './Components/main/main.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LHSContentsComponent } from './Components/lhscontents/lhscontents.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { routing } from './app.routing';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DailyChartComponent } from './Components/daily-chart/daily-chart.component';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { DatePipe } from '@angular/common';\r\nimport { defineLordIconElement } from 'lord-icon-element';\r\nimport lottie from 'lottie-web';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    LHSContentsComponent,\r\n    DailyChartComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    routing,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    NgxEchartsModule.forRoot({\r\n      /**\r\n       * This will import all modules from echarts.\r\n       * If you only need custom modules,\r\n       * please refer to [Custom Build] section.\r\n       */\r\n      echarts: () => import('echarts'), // or import('./path-to-my-custom-echarts')\r\n    }),\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule {\r\n  constructor() {\r\n    defineLordIconElement(lottie.loadAnimation);\r\n  }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MainComponent } from './Components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n    { path: 'dashboard', component: MainComponent},\r\n    { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","export const APIUrl = 'https://api.openweathermap.org/data/2.5/';\r\nexport const IconUrl = 'http://openweathermap.org/img/wn/';\r\nexport const APIKey = '0dd5542d536e51ce47540ed11c8f0ebc';\r\n\r\nexport const Api = {\r\n    endpoints: {\r\n        weather: '/weather',\r\n        box: '/box/city',\r\n        find: '/find',\r\n        oneCall: '/onecall',\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}