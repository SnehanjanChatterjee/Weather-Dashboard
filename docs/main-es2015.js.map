{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/lhscontents/lhscontents.component.ts","./src/app/Components/lhscontents/lhscontents.component.html","./src/app/Components/main/main.component.ts","./src/app/Components/main/main.component.html","./src/app/Constants/weather-dashboard-constants.ts","./src/app/Services/weather.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/appConfig.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACK;;;;;;;ICYhF,yEACI;IAAA,uDACA;;IAAA,uEAAM;IAAA,iEAAO;IAAA,4DAAO;IACxB,4DAAM;;;IAFF,0DACA;IADA,0LACA;;;IAGJ,yEACI;IAAA,uDACA;;IAAA,uEAAM;IAAA,iEAAO;IAAA,4DAAO;IACxB,4DAAM;;;IAFF,0DACA;IADA,0LACA;;ADVD,MAAM,oBAAoB;IAE/B,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QACnD,aAAQ,GAAW,SAAS,CAAC;QAC7B,uBAAkB,GAAY,KAAK,CAAC;QACpC,oBAAe,GAAW,qFAAO,CAAC;QAGxB,qBAAgB,GAAQ,IAAI,0DAAY,EAAkB,CAAC;IANd,CAAC;IAQxD,QAAQ;IACR,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC1D,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACxE,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,wFAAU,CAAC,CAAC,CAAC,qFAAO,CAAC;QACxE,CAAC,CACF,CAAC;IACJ,CAAC;;wFAtBU,oBAAoB;oGAApB,oBAAoB;QCVjC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEAAM;QAAA,iEAAO;QAAA,4DAAO;QACxB,4DAAM;QACN,yEACI;QAAA,sFAAuH;QAAvF,+MAAgC,gGAAW,2BAAuB,IAAlC;QAAoC,4DAAmB;QAC3H,4DAAM;QACN,yEACI;QAAA,uEAAM;QAAA,iEAAO;QAAA,4DAAO;QACxB,4DAAM;QACV,4DAAM;QAEN,kHACI;QAIJ,kHACI;QAGJ,0EACI;QAAA,wDACJ;QAAA,4DAAM;QACV,4DAAM;;QAnBsC,0DAAgC;QAAhC,2FAAgC;QAOtD,0DAAqC;QAArC,mGAAqC;QAKrC,0DAAwC;QAAxC,sGAAwC;QAKtD,0DACJ;QADI,wGACJ;;6FDdS,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAQE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AElBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAS3C,MAAM,aAAa;IAMxB,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAJnD,aAAQ,GAAW,SAAS,CAAC;QAE7B,gBAAW,GAAY,IAAI,CAAC;IAE2B,CAAC;IAExD,QAAQ;QACN,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACrC,CAAC;IAED,2BAA2B;QACzB,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACxE,mBAAmB,CAAC,EAAE;YACpB,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBACrB,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;gBAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,oBAAoB,CAAC,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2BAA2B,CAAC,IAAS;QACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;;0EA9BU,aAAa;6FAAb,aAAa;QCT1B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qFAAuI;QAA3E,0KAAoB,uCAAmC,IAAC;QAAC,4DAAkB;QAC3I,4DAAM;QACN,yEACI;QAAA,oEAA4C;QAC5C,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QATuB,0DAA0C;QAA1C,uGAA0C;QAGtD,0DAAgC;QAAhC,2JAAgC;QAEjC,0DACJ;QADI,uGACJ;;6FDAC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,gBAAgB;AAC/C,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC,wBAAwB;AACxD,MAAM,eAAe,GAAG,UAAU,CAAC,CAAC,wBAAwB;AAE5D,MAAM,UAAU,GAAG,YAAY,CAAC;AAChC,MAAM,OAAO,GAAG,SAAS,CAAC;;;;;;;;;;;;;ACLjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAE6B;AAC5B;AAEO;AACsC;;;AAKlF,MAAM,cAAc;IAEzB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAE7B,oBAAe,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAFrB,CAAC;IAI1C,4BAA4B,CAAC,QAAgB;QAE3C,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,sFAAe,CAAC,CAAC,CAAC,mFAAY,CAAC;QAE9E,MAAM,GAAG,GAAG,iDAAM,GAAG,8CAAG,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,GAAG,QAAQ,GAAG,SAAS,GAAG,iDAAM,GAAG,SAAS,GAAG,IAAI,CAAC;QACtG,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAEjF,CAAC;IAED,WAAW,CAAC,QAAiB;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED,YAAY,CAAC,KAAwB;QACnC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,uDAAU,CAAC,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC,CAAC;IACrD,CAAC;;4EA1BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,mBAAmB,CAAC;KAC7B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACkB;AACc;AACO;AAC9B;AAChB;AAC8B;AACzB;;;AAmBtC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,4FAAuB;YACvB,qEAAgB;YAChB,oDAAO;YACP,mFAAoB;YACpB,0DAAW;SACZ;mIAIU,SAAS,mBAflB,2DAAY;QACZ,6EAAa;QACb,kGAAoB,aAGpB,uEAAa;QACb,4FAAuB;QACvB,qEAAgB,iEAEhB,mFAAoB;QACpB,0DAAW;6FAKF,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,6EAAa;oBACb,kGAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,qEAAgB;oBAChB,oDAAO;oBACP,mFAAoB;oBACpB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAuD;AAEU;AAEjE,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6EAAa,EAAC;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;CAC9D,CAAC;AAEK,MAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACVzE;AAAA;AAAA;AAAA;AAAO,MAAM,MAAM,GAAG,0CAA0C,CAAC;AAC1D,MAAM,MAAM,GAAG,kCAAkC,CAAC;AAElD,MAAM,GAAG,GAAG;IACf,SAAS,EAAE;QACP,OAAO,EAAE,UAAU;QACnB,GAAG,EAAE,WAAW;QAChB,IAAI,EAAE,OAAO;KAChB;CACJ;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CELCIUS, FAHRENHEIT } from 'src/app/Constants/weather-dashboard-constants';\nimport { CurrentWeather } from 'src/app/Models/weather.models';\nimport { WeatherService } from 'src/app/Services/weather.service';\n\n@Component({\n  selector: 'app-lhscontents',\n  templateUrl: './lhscontents.component.html',\n  styleUrls: ['./lhscontents.component.css']\n})\nexport class LHSContentsComponent implements OnInit {\n\n  constructor(private _weatherService: WeatherService) { }\n  cityName: string = 'Kolkata';\n  unitTypeFahrenheit: boolean = false;\n  displayUnitType: string = CELCIUS;\n\n  @Input() locationWeatherData: CurrentWeather;\n  @Output() onUnitTypeChange: any = new EventEmitter<CurrentWeather>();\n\n  ngOnInit(): void {\n  }\n\n  handleSwitchSelection() {\n    this._weatherService.setUnitType(this.unitTypeFahrenheit);\n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).subscribe(\n      data => {\n        this.locationWeatherData = data;\n        this.onUnitTypeChange.emit(this.locationWeatherData);\n        this.displayUnitType = this.unitTypeFahrenheit ? FAHRENHEIT : CELCIUS;\n      }\n    );\n  }\n\n}\n","<div id=\"mainLHSDiv\">\n    <div class=\"unitToggler\">\n        <div class=\"unitTogglerContentCel\">\n            <span>&#8451;</span>\n        </div>\n        <div class=\"unitTogglerContent\">\n            <mat-slide-toggle color=primary [(ngModel)]=\"unitTypeFahrenheit\" (change)=\"handleSwitchSelection()\"></mat-slide-toggle>\n        </div>\n        <div class=\"unitTogglerContentFah\">\n            <span>&#8457;</span>\n        </div>\n    </div>\n    <!-- Celcius -->\n    <div class=\"temp\" *ngIf=\"displayUnitType === 'celcius'\">\n        {{locationWeatherData.main.temp | number: '1.0-0'}}\n        <span>&#8451;</span>\n    </div>\n    <!-- Fahrenheit -->\n    <div class=\"temp\" *ngIf=\"displayUnitType === 'fahrenheit'\">\n        {{locationWeatherData.main.temp | number: '1.0-0'}}\n        <span>&#8457;</span>\n    </div>\n    <div class=\"cityInfo\">\n        {{locationWeatherData.name}}\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeather } from 'src/app/Models/weather.models';\nimport { WeatherService } from 'src/app/Services/weather.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  cityName: string = 'Kolkata';\n  currentWeatherData: CurrentWeather;\n  pageLoading: boolean = true;\n\n  constructor(private _weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n    this.getCurrentWeatherByCityName();\n  }\n\n  getCurrentWeatherByCityName() {\n    this._weatherService.loadCurrentWeatherByCityName(this.cityName).subscribe(\n      responseWeatherData => {\n        window.setTimeout(() => {\n          this.currentWeatherData = responseWeatherData;\n          console.log(this.currentWeatherData);\n          this.pageLoading = false;\n        }, 2000);\n      },\n      responseProductError => {\n        console.log(responseProductError);\n        this.currentWeatherData = null;\n      }\n    );\n  }\n\n  updateDataOnSwitchSelection(data: any) {\n    this.currentWeatherData = data;\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-3\" style=\"padding: 0;\">\n            <app-lhscontents [locationWeatherData]=\"currentWeatherData\" (onUnitTypeChange)=\"updateDataOnSwitchSelection($event)\"></app-lhscontents>\n        </div>\n        <div class=\"col-md-9\" style=\"padding: 0;\">\n            <div [ngClass]=\"{loader:pageLoading}\"></div>\n            <div id=\"mainDiv\">\n                {{currentWeatherData.name}}\n            </div>\n        </div>\n    </div>\n</div>","export const CELCIUS_UNIT = 'metric'; // Celsius unit \r\nexport const KELVIN_UNIT = 'standard'; // Kelvin unit (default)\r\nexport const FAHRENHEIT_UNIT = 'imperial'; // Kelvin unit (default)\r\n\r\nexport const FAHRENHEIT = 'fahrenheit';\r\nexport const CELCIUS = 'celcius';","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { CurrentWeather } from '../Models/weather.models';\nimport { Api, APIKey, APIUrl } from '../appConfig';\nimport { CELCIUS_UNIT, FAHRENHEIT_UNIT } from '../Constants/weather-dashboard-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private _http: HttpClient) { }\n\n  private unitTypeSubject = new BehaviorSubject<boolean>(false);\n\n  loadCurrentWeatherByCityName(cityName: string): Observable<CurrentWeather> {\n\n    let unit = (this.unitTypeSubject.getValue()) ? FAHRENHEIT_UNIT : CELCIUS_UNIT;\n    \n    const url = APIUrl + Api.endpoints.weather + '?q=' + cityName + '&appid=' + APIKey + '&units=' + unit;\n    return this._http.get<CurrentWeather>(url).pipe(catchError(this.errorHandler));\n    \n  }\n\n  setUnitType(unitType: boolean) {\n    this.unitTypeSubject.next(unitType);\n  }\n\n  getUnitType(): Observable<boolean> {\n    return this.unitTypeSubject.asObservable();\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    console.error(error);\n    return throwError(error.message || \"Server Error\");\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather-Dashboard';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './Components/main/main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LHSContentsComponent } from './Components/lhscontents/lhscontents.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { routing } from './app.routing';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    LHSContentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    routing,\n    MatSlideToggleModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MainComponent } from './Components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n    { path: 'dashboard', component: MainComponent},\r\n    { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","export const APIUrl = 'https://api.openweathermap.org/data/2.5/';\r\nexport const APIKey = '0dd5542d536e51ce47540ed11c8f0ebc';\r\n\r\nexport const Api = {\r\n    endpoints: {\r\n        weather: '/weather',\r\n        box: '/box/city',\r\n        find: '/find'\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}